{"version":3,"file":"static/js/341.26c66e28.chunk.js","mappings":"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","sources":["components/Error/Error.js","webpack://react-homework-template/./src/components/Loader/Loader.module.scss?a435","components/Loader/Loader.js","webpack://react-homework-template/./src/components/MovieDetail/MovieDetail.module.scss?bc1c","components/MovieDetail/MovieDetail.js","pages/MovieDetails/MovieDetails.js","utils/fetchAPI.js"],"sourcesContent":["export const Error = () => {\n  return <div>Error. Sorry no find any films</div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__DwtSp\"};","import { RotatingLines } from 'react-loader-spinner';\nimport css from './Loader.module.scss';\n\nexport const Loader = () => {\n  return (\n    <div className={css.loader}>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetail_container__4E0BG\",\"details__btn\":\"MovieDetail_details__btn__ULY2E\",\"details__icon\":\"MovieDetail_details__icon__jI728\",\"details__container\":\"MovieDetail_details__container__GEGVE\",\"details\":\"MovieDetail_details__q9gSE\",\"details__title\":\"MovieDetail_details__title__9wAW9\",\"additional\":\"MovieDetail_additional__HsqcX\",\"additional__link\":\"MovieDetail_additional__link__-hGvY\"};","import PropTypes from 'prop-types';\nimport { useLocation, useNavigate, Outlet } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport { IconContext } from 'react-icons';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\n\nimport css from './MovieDetail.module.scss';\n\nexport const MovieDetail = ({ movieInfo }) => {\n  const { title, release_date, vote_average, overview, genres, poster_path } =\n    movieInfo;\n\n  const location = useLocation();\n  const navigation = useNavigate();\n\n  const onBtnClick = () => {\n    navigation(location?.state?.from ?? '/');\n  };\n\n  return (\n    <div className={css.details}>\n      <button className={css.details__btn} type=\"button\" onClick={onBtnClick}>\n        <IconContext.Provider value={{ size: '20px' }}>\n          <AiOutlineArrowLeft className={css.details__icon} />\n        </IconContext.Provider>\n        Go back\n      </button>\n\n      <div className={css.details__container}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={title}\n          width=\"300px\"\n          heigth=\"450px\"\n        />\n        <div className={css.details}>\n          <h2 className={css.details__title}>\n            {`${title} (${parseInt(release_date)})`}\n          </h2>\n          <p>\n            User score:\n            {vote_average * 10\n              ? ` ${(vote_average * 10).toFixed(2)}%`\n              : ' no rating'}\n          </p>\n          <b>Overview</b>\n          <p>{overview}</p>\n          <b>Genres</b>\n          <p>{genres && genres.map(({ name }) => name).join(', ')}</p>\n        </div>\n      </div>\n      <div className={css.additional}>\n        <p className={css.additional__title}>Additional information</p>\n        <ul>\n          <li>\n            <Link\n              className={css.additional__link}\n              to=\"cast\"\n              state={location.state}\n            >\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link\n              className={css.additional__link}\n              to=\"reviews\"\n              state={location.state}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nMovieDetail.propTypes = {\n  movieInfo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    poster_path: PropTypes.string.isRequired,\n  }),\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { MovieDetail } from '../../components/MovieDetail/MovieDetail';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Error } from '../../components/Error/Error';\nimport { getFetchById } from '../../utils/fetchAPI';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoadind] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoadind(true);\n    (async () => {\n      try {\n        const movie = await getFetchById(movieId);\n        setMovieInfo(movie);\n        setLoadind(false);\n      } catch (error) {\n        setLoadind(false);\n        setError(true);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? <Loader /> : null}\n      {error ? <Error /> : null}\n      {movieInfo && !error ? <MovieDetail movieInfo={movieInfo} /> : null}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'd08efe59ac708d7aace6afed9ba7eae9';\n\nexport const getFetchTrending = async () => {\n  const response = await fetch(`${BASE_URL}trending/all/day?api_key=${KEY}`);\n  if (response.ok) {\n    const data = await response.json();\n    return data.results;\n  }\n  throw new Error('Error responsive');\n};\n\nexport const getFetchById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  if (response.ok) {\n    const data = await response.json();\n    return data;\n  }\n  throw new Error('Error responsive');\n};\n\nexport const getFetchByCredits = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  if (response.ok) {\n    const data = await response.json();\n    return data.cast;\n  }\n  throw new Error('Error responsive');\n};\n\nexport const getFetchByReviews = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  if (response.ok) {\n    const data = await response.json();\n    return data.results;\n  }\n  throw new Error('Error responsive');\n};\n\nexport const getFetchQuery = async query => {\n  const response = await fetch(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  if (response.ok) {\n    const data = await response.json();\n    return data.results;\n  }\n  throw new Error('Error responsive');\n};\n"],"names":["Error","Loader","className","css","strokeColor","strokeWidth","animationDuration","width","visible","MovieDetail","movieInfo","title","release_date","vote_average","overview","genres","poster_path","location","useLocation","navigation","useNavigate","type","onClick","state","from","value","size","src","alt","heigth","parseInt","toFixed","map","name","join","to","useState","setMovieInfo","loading","setLoadind","error","setError","movieId","useParams","useEffect","getFetchById","movie","BASE_URL","KEY","getFetchTrending","fetch","response","ok","json","data","results","getFetchByCredits","cast","getFetchByReviews","getFetchQuery","query"],"sourceRoot":""}