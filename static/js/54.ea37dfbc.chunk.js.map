{"version":3,"file":"static/js/54.ea37dfbc.chunk.js","mappings":"kLAAaA,EAAQ,WACnB,OAAO,2DACR,C,mECDD,EAAyB,uB,SCEZC,EAAS,WACpB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,uJCfYC,EAAa,WACxB,OAAO,oEACR,E,SC8CD,EAzCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACRL,GAAW,IACX,iBAAC,8GAEyBM,EAAAA,EAAAA,IAAkBH,GAF3C,OAESN,EAFT,OAGGC,EAAWD,GACXG,GAAW,GAJd,gDAMGA,GAAW,GACXE,GAAS,GAPZ,wDAAD,EAUD,GAAE,CAACC,KAGF,gCACGJ,GAAU,SAACZ,EAAA,EAAD,IAAa,KACvBc,GAAQ,SAACf,EAAA,EAAD,IAAY,KACnBa,GAAYF,EAAQU,OAA0B,MAAjB,SAACZ,EAAD,KAC/B,wBACGE,EAAQU,OACLV,EAAQW,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EAKZ,IACD,SAIX,C,sLC9CKG,EAAW,gCACXC,EAAM,mCAECC,EAAgB,mCAAG,sGACPC,MAAM,GAAD,OAAIH,EAAJ,oCAAwCC,IADtC,YACxBG,EADwB,QAEjBC,GAFiB,gCAGTD,EAASE,OAHA,cAGtBC,EAHsB,yBAIrBA,EAAKC,SAJgB,aAMxB,IAAIlC,MAAM,oBANc,2CAAH,qDAShBmC,EAAY,mCAAG,WAAMlB,GAAN,yFACHY,MAAM,GAAD,OACvBH,EADuB,iBACNT,EADM,oBACaU,EADb,oBADF,YACpBG,EADoB,QAIbC,GAJa,gCAKLD,EAASE,OALJ,cAKlBC,EALkB,yBAMjBA,GANiB,aAQpB,IAAIjC,MAAM,oBARU,2CAAH,sDAWZoC,EAAiB,mCAAG,WAAMnB,GAAN,yFACRY,MAAM,GAAD,OACvBH,EADuB,iBACNT,EADM,4BACqBU,EADrB,oBADG,YACzBG,EADyB,QAIlBC,GAJkB,gCAKVD,EAASE,OALC,cAKvBC,EALuB,yBAMtBA,EAAKI,MANiB,aAQzB,IAAIrC,MAAM,oBARe,2CAAH,sDAWjBoB,EAAiB,mCAAG,WAAMH,GAAN,yFACRY,MAAM,GAAD,OACvBH,EADuB,iBACNT,EADM,4BACqBU,EADrB,2BADG,YACzBG,EADyB,QAIlBC,GAJkB,gCAKVD,EAASE,OALC,cAKvBC,EALuB,yBAMtBA,EAAKC,SANiB,aAQzB,IAAIlC,MAAM,oBARe,2CAAH,sDAWjBsC,EAAa,mCAAG,WAAMC,GAAN,yFACJV,MAAM,GAAD,OACvBH,EADuB,gCACSC,EADT,iCACqCY,EADrC,gCADD,YACrBT,EADqB,QAIdC,GAJc,gCAKND,EAASE,OALH,cAKnBC,EALmB,yBAMlBA,EAAKC,SANa,aAQrB,IAAIlC,MAAM,oBARW,2CAAH,qD","sources":["components/Error/Error.js","webpack://react-homework-template/./src/components/Loader/Loader.module.scss?a435","components/Loader/Loader.js","components/Info/NotReviews.js","components/Reviews/Reviews.js","utils/fetchAPI.js"],"sourcesContent":["export const Error = () => {\n  return <div>Error. Sorry no find any films</div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__DwtSp\"};","import { RotatingLines } from 'react-loader-spinner';\nimport css from './Loader.module.scss';\n\nexport const Loader = () => {\n  return (\n    <div className={css.loader}>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","export const NotReviews = () => {\n  return <p>We don't have any reviews for this movie!</p>;\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Error } from '../../components/Error/Error';\nimport { NotReviews } from '../../components/Info/NotReviews';\nimport { getFetchByReviews } from '../../utils/fetchAPI';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoadind] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoadind(true);\n    (async () => {\n      try {\n        const reviews = await getFetchByReviews(movieId);\n        setReviews(reviews);\n        setLoadind(false);\n      } catch (error) {\n        setLoadind(false);\n        setError(true);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? <Loader /> : null}\n      {error ? <Error /> : null}\n      {!loading && !reviews.length ? <NotReviews /> : null}\n      <ul>\n        {reviews.length\n          ? reviews.map(({ id, author, content }) => {\n              return (\n                <li key={id}>\n                  <b>{author}</b>\n                  <p>{content}</p>\n                </li>\n              );\n            })\n          : null}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'd08efe59ac708d7aace6afed9ba7eae9';\n\nexport const getFetchTrending = async () => {\n  const response = await fetch(`${BASE_URL}trending/all/day?api_key=${KEY}`);\n  if (response.ok) {\n    const data = await response.json();\n    return data.results;\n  }\n  throw new Error('Error responsive');\n};\n\nexport const getFetchById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  if (response.ok) {\n    const data = await response.json();\n    return data;\n  }\n  throw new Error('Error responsive');\n};\n\nexport const getFetchByCredits = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  if (response.ok) {\n    const data = await response.json();\n    return data.cast;\n  }\n  throw new Error('Error responsive');\n};\n\nexport const getFetchByReviews = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  if (response.ok) {\n    const data = await response.json();\n    return data.results;\n  }\n  throw new Error('Error responsive');\n};\n\nexport const getFetchQuery = async query => {\n  const response = await fetch(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  if (response.ok) {\n    const data = await response.json();\n    return data.results;\n  }\n  throw new Error('Error responsive');\n};\n"],"names":["Error","Loader","className","css","strokeColor","strokeWidth","animationDuration","width","visible","NotReviews","useState","reviews","setReviews","loading","setLoadind","error","setError","movieId","useParams","useEffect","getFetchByReviews","length","map","id","author","content","BASE_URL","KEY","getFetchTrending","fetch","response","ok","json","data","results","getFetchById","getFetchByCredits","cast","getFetchQuery","query"],"sourceRoot":""}