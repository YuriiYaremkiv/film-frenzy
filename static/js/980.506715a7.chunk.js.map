{"version":3,"file":"static/js/980.506715a7.chunk.js","mappings":"mGAAA,IAoDMA,EAAc,CAClBC,UArDgB,CAChBC,IAAK,MACLC,MAAO,QACPC,GAAI,MAmDJC,UAjCgB,CAChBC,IAAK,MACLC,KAAM,QAgCNC,UAjDgB,CAChBC,YAAa,cACbC,QAAS,UACTC,UAAW,YACXC,SAAU,YA8CVC,WA9BiB,CACjBV,MAAO,QACPC,GAAI,KACJU,OAAQ,UA4BRC,OA5Ca,CACbC,OAAQ,SACRC,aAAc,eACdC,WAAY,aACZR,QAAS,UACTC,UAAW,aAwCXQ,eA1BqB,SAAAC,GAAO,0EACiCA,EADjC,MA2B5BC,YAxBkB,SAAAD,GAAO,8DACwBA,EADxB,EAyBzBE,kBAjBwB,SAAAC,GAAQ,gEACmBA,EADnB,EAkBhCC,YAvBkB,SAAAC,GAAQ,4DACqBA,EADrB,EAwB1BC,YArBkB,SAAAC,GAAQ,gDAAuCA,EAAvC,EAsB1BC,aAjBmB,SAAAC,GAAW,mDACQA,EADR,EAkB9BC,YAfkB,SAAAC,GAAO,8CACQA,EADR,iBAkB3B,K,kEClEMC,EAAW,gCACXC,EAAM,mCAENC,EACU,gBAAGjC,EAAH,EAAGA,UAAWkC,EAAd,EAAcA,WAAYC,EAA1B,EAA0BA,KAA1B,gBACTJ,EADS,oBACW/B,EADX,YACwBkC,EADxB,oBAC8CF,EAD9C,iBAC0DG,EAD1D,EADVF,EAGQ,gBAAG1B,EAAH,EAAGA,UAAW4B,EAAd,EAAcA,KAAd,gBACPJ,EADO,iBACUxB,EADV,oBAC+ByB,EAD/B,iBAC2CG,EAD3C,EAHRF,EAKsB,gBAAGG,EAAH,EAAGA,QAASD,EAAZ,EAAYA,KAAZ,gBACrBJ,EADqB,iBACJK,EADI,oCAC+BJ,EAD/B,iBAC2CG,EAD3C,EALtBF,EAOU,gBAAGG,EAAH,EAAGA,QAAH,gBAAoBL,EAApB,iBAAqCK,EAArC,oBAAwDJ,EAAxD,EAPVC,EAQK,gBAAGG,EAAH,EAAGA,QAAH,gBAAoBL,EAApB,iBAAqCK,EAArC,2BAA+DJ,EAA/D,EARLC,EASI,2BAASF,EAAT,oCAA6CC,EAA7C,EAGJK,EAAW,CACfC,QAAQ,WAAD,wBAAE,oGAAStC,EAAT,EAASA,UAAWkC,EAApB,EAAoBA,WAApB,IAAgCC,KAAAA,OAAhC,MAAuC,EAAvC,oBAEkBI,EAAAA,EAAAA,IACrBN,EAA4B,CAAEjC,UAAAA,EAAWkC,WAAAA,EAAYC,KAAAA,KAHlD,cAECK,EAFD,yBAKE,CAAEA,SAAAA,IALJ,yDAOE,CAAEC,IAAG,OAPP,yDAAF,mDAAC,GAURC,UAAU,WAAD,wBAAE,kGAASnC,EAAT,EAASA,UAAT,IAAoB4B,KAAAA,OAApB,MAA2B,EAA3B,oBAEgBI,EAAAA,EAAAA,IACrBN,EAA0B,CAAE1B,UAAAA,EAAW4B,KAAAA,KAHlC,cAEDK,EAFC,yBAMA,CAAEA,SAAAA,IANF,yDAQA,CAAEC,IAAG,OARL,yDAAF,mDAAC,GAWVE,wBAAwB,WAAD,wBAAE,kGAASP,EAAT,EAASA,QAAT,IAAkBD,KAAAA,OAAlB,MAAyB,EAAzB,oBAEEI,EAAAA,EAAAA,IACrBN,EAAwC,CAAEG,QAAAA,EAASD,KAAAA,KAHhC,cAEfK,EAFe,yBAMd,CAAEA,SAAAA,IANY,yDAQd,CAAEC,IAAG,OARS,yDAAF,mDAAC,GAWxBG,WAAW,WAAD,wBAAE,8FAASR,EAAT,EAASA,QAAT,kBAEeG,EAAAA,EAAAA,IAAUN,EAAuB,CAAEG,QAAAA,KAFlD,cAEFI,EAFE,yBAGD,CAAEA,SAAAA,IAHD,yDAKD,CAAEC,IAAG,OALJ,yDAAF,mDAAC,GAQXI,mBAAmB,WAAD,wBAAE,8FAAST,EAAT,EAASA,QAAT,kBAEOG,EAAAA,EAAAA,IACrBN,EAA4B,CAAEG,QAAAA,KAHhB,cAEVI,EAFU,yBAKT,CAAEA,SAAAA,IALO,yDAOT,CAAEC,IAAG,OAPI,yDAAF,mDAAC,GAUnBK,UAAU,WAAD,wBAAE,6GAEgBP,EAAAA,EAAAA,IAAUN,KAF1B,cAEDO,EAFC,yBAGA,CAAEA,SAAAA,IAHF,yDAKA,CAAEC,IAAG,OALL,yDAAF,kDAAC,IAUZ,K,kEC5EMV,EAAW,gCACXC,EAAM,mCAENC,EACI,gBAAGjC,EAAH,EAAGA,UAAWc,EAAd,EAAcA,OAAQqB,EAAtB,EAAsBA,KAAtB,gBACHJ,GADG,OACQ/B,EADR,YACqBc,EADrB,oBACuCkB,EADvC,iBACmDG,EADnD,EADJF,EAGO,gBAAGc,EAAH,EAAGA,KAAH,gBAAiBhB,EAAjB,cAA+BgB,EAA/B,oBAA+Cf,EAA/C,EAHPC,EAIS,gBAAGc,EAAH,EAAGA,KAAH,gBAAiBhB,EAAjB,cAA+BgB,EAA/B,4BAAuDf,EAAvD,EAJTC,EAKS,gBAAGc,EAAH,EAAGA,KAAH,gBAAiBhB,EAAjB,cAA+BgB,EAA/B,4BAAuDf,EAAvD,EALTC,EAMU,gBAAGc,EAAH,EAAGA,KAAH,gBAAiBhB,EAAjB,cAA+BgB,EAA/B,2BAAsDf,EAAtD,EANVC,EAOiB,gBAAGc,EAAH,EAAGA,KAAH,gBAChBhB,EADgB,cACFgB,EADE,oCAC8Bf,EAD9B,EAPjBC,EASQ,2BAASF,EAAT,iCAA0CC,EAA1C,EAGRgB,EAAQ,CACZC,MAAM,WAAD,wBAAE,oGAASjD,EAAT,EAASA,UAAWc,EAApB,EAAoBA,OAApB,IAA4BqB,KAAAA,OAA5B,MAAmC,EAAnC,oBAEoBI,EAAAA,EAAAA,IACrBN,EAAsB,CAAEjC,UAAAA,EAAWc,OAAAA,EAAQqB,KAAAA,KAH1C,cAEGK,EAFH,yBAKI,CAAEA,SAAAA,IALN,yDAOI,CAAEC,IAAG,OAPT,yDAAF,mDAAC,GAUNS,gBAAgB,WAAD,wBAAE,8FAASH,EAAT,EAASA,KAAT,kBAEUR,EAAAA,EAAAA,IAAUN,EAAyB,CAAEc,KAAAA,KAF/C,cAEPP,EAFO,yBAGN,CAAEA,SAAAA,IAHI,yDAKN,CAAEC,IAAG,OALC,yDAAF,mDAAC,GAQhBU,eAAe,WAAD,wBAAE,8FAASJ,EAAT,EAASA,KAAT,kBAEWR,EAAAA,EAAAA,IAAUN,EAA2B,CAAEc,KAAAA,KAFlD,cAENP,EAFM,yBAGL,CAAEA,SAAAA,IAHG,yDAKL,CAAEC,IAAG,OALA,yDAAF,mDAAC,GAQfW,eAAe,WAAD,wBAAE,8FAASL,EAAT,EAASA,KAAT,kBAEWR,EAAAA,EAAAA,IAAUN,EAA2B,CAAEc,KAAAA,KAFlD,cAENP,EAFM,yBAGL,CAAEA,SAAAA,IAHG,yDAKL,CAAEC,IAAG,OALA,yDAAF,mDAAC,GAQfY,uBAAuB,WAAD,wBAAE,8FAASN,EAAT,EAASA,KAAT,kBAEGR,EAAAA,EAAAA,IACrBN,EAAmC,CAAEc,KAAAA,KAHnB,cAEdP,EAFc,yBAKb,CAAEA,SAAAA,IALW,yDAOb,CAAEC,IAAG,OAPQ,yDAAF,mDAAC,GAUvBa,gBAAgB,WAAD,wBAAE,8FAASP,EAAT,EAASA,KAAT,kBAEUR,EAAAA,EAAAA,IAAUN,EAA4B,CAAEc,KAAAA,KAFlD,cAEPP,EAFO,yBAGN,CAAEA,SAAAA,IAHI,yDAKN,CAAEC,IAAG,OALC,yDAAF,mDAAC,GAQhBc,cAAc,WAAD,wBAAE,6GAEYhB,EAAAA,EAAAA,IAAUN,KAFtB,cAELO,EAFK,yBAGJ,CAAEA,SAAAA,IAHE,yDAKJ,CAAEC,IAAG,OALD,yDAAF,kDAAC,IAUhB,K,uDC9EA,MAAwB,qB,SCCXe,EAAQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OAAO,gBAAKC,UAAWC,EAAhB,SAA4BF,GACpC,C,6GCHD,GAAgB,gBAAkB,sCAAsC,eAAiB,qCAAqC,cAAgB,oCAAoC,cAAgB,oCAAoC,aAAe,mCAAmC,YAAc,mC,SCIzRG,EAAe,WAC1B,IAAQC,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAAV,IAA/BA,UAER,OACE,gBACEG,OAAK,UAAOC,EAAAA,EAAAA,MAAAA,6BAA8CJ,IAC1DH,UAAWC,EAAI,aAAD,OAAcE,IAF9B,UAIE,SAACK,EAAA,EAAD,CACER,UAAWC,EAAI,WAAD,OAAYE,IAC1BM,GAAI,CACF,2BAA4B,CAC1BC,QAAuB,QAAdP,EAAsB,UAAY,eAMtD,E,yDCtBD,EAA4B,8BAA5B,EAAiE,yBAAjE,EAAwG,gCAAxG,EAAgJ,0BAAhJ,EAAuL,+BAAvL,EAA+N,2BAA/N,EAA4Q,oCAA5Q,EAA+T,iCAA/T,EAA+W,iCAA/W,EAAuZ,yBAAvZ,EAAwb,0BAAxb,EAAigB,yBCWjgB,SAASQ,EAAgBC,GACvB,IAAQZ,EAA8BY,EAA9BZ,UAAWM,EAAmBM,EAAnBN,MAAOO,EAAYD,EAAZC,QAC1B,OACE,gBACEb,UAAWA,EACXM,OAAK,kBACAA,GADA,IAEHQ,QAAS,QACTC,UAAW,uCAEbF,QAASA,GAGd,CAED,SAASG,EAAgBJ,GACvB,IAAQZ,EAA8BY,EAA9BZ,UAAWM,EAAmBM,EAAnBN,MAAOO,EAAYD,EAAZC,QAC1B,OACE,gBACEb,UAAWA,EACXM,OAAK,kBACAA,GADA,IAEHQ,QAAS,QACTC,UAAW,oCACXE,OAAQ,IAEVJ,QAASA,GAGd,CAEM,IAAMK,EAAa,SAAC,GAAwC,IAAD,IAArCC,OAAAA,OAAqC,MAA5B,GAA4B,MAAxBC,UAAAA,OAAwB,SACxDjB,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAAV,IAA/BA,UAEFkB,EAAQF,EAAOG,QAAU,EAE/B,OACE,iBAAKtB,UAAWC,EAAhB,WACE,SAAC,IAAD,CACEsB,QAAS,CACPC,WAAY,qBACZC,OAAQ,qBACRC,OAAQ,6CACRC,QAAS,uBALb,SAQG,SAAAC,GAAO,OACN,SAAC,IAAD,CACEC,cAAc,EACdC,aACEF,EAAQJ,WACJ,EACAI,EAAQH,OACRJ,EAAQ,EACN,EACAA,EACFO,EAAQF,OACRL,EAAQ,EACN,EACAA,EACFA,EAAQ,EACR,EACAA,EAENU,eACEH,EAAQJ,WACJ,GACAI,EAAQH,QAERG,EAAQF,OADR,GAKNM,WAAW,SAACrB,EAAD,IACXsB,WAAW,SAACjB,EAAD,IA3Bb,SA6BGG,EAAOe,KACN,kBACEC,EADF,EACEA,GACApC,EAFF,EAEEA,MACAqC,EAHF,EAGEA,KACaC,EAJf,EAIEC,YACcC,EALhB,EAKEC,aACgBC,EANlB,EAMEC,eACcC,EAPhB,EAOEC,aACYC,EARd,EAQEC,WARF,OAUE,SAAC,KAAD,CAEEC,GAAE,WAAe,OAATF,EAAgB,KAAO,QAA7B,YAAwCV,GAC1CnC,UAAWC,EAHb,UAKE,gBAAKD,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,gBACE+C,IAAK3G,EAAAA,EAAAA,YAAwBgG,GAC7BY,IAAKlD,GAASqC,EACdpC,UAAWC,KAEb,gBAAKD,UAAWC,KAChB,iBAAKiD,QAAS,EAAGlD,UAAWC,EAA5B,WACE,cACEK,OAAK,UACAC,EAAAA,EAAAA,MAAAA,gBAAiCJ,IAEtCH,UAAWC,EAJb,SAMG0C,EAAOQ,QAAQ,MAElB,SAACC,EAAA,EAAD,CACEC,SAAS,SACT/C,OAAK,UACAC,EAAAA,EAAAA,MAAAA,gBAAiCJ,IAEtCH,UAAWC,QAGf,iBAAKD,UAAWC,EAAhB,WACE,cACEK,OAAK,UACAC,EAAAA,EAAAA,MAAAA,gBAAiCJ,IAEtCH,UAAWC,EAJb,mBAMIsC,GAAQE,SANZ,aAMG,EAAkBa,MAAM,EAAG,MAE9B,cACEhD,OAAK,UACAC,EAAAA,EAAAA,MAAAA,gBAAiCJ,IAEtCH,UAAWC,EAJb,SAMGF,GAASqC,aA5CbD,EAXT,KA/BE,IAiGTf,IAAa,SAAClB,EAAD,MAGnB,C,qBCgFD,IA9OmB,CACjBI,MAAO,CACLiD,sBAAuB,CACrBC,MAAO,CACLC,gBAAiB,QAEnBC,KAAM,CACJD,gBAAiB,WAEnBE,IAAK,CACHF,gBAAiB,YAGrBG,oBAAqB,CACnBJ,MAAO,CACLC,gBAAiB,uBAEnBC,KAAM,CACJD,gBAAiB,QAEnBE,IAAK,CACHF,gBAAiB,SAGrBI,yBAA0B,CACxBL,MAAO,CACLC,gBAAiB,WAEnBC,KAAM,CACJD,gBAAiB,WAEnBE,IAAK,CACHF,gBAAiB,YAGrBK,qBAAsB,CACpBN,MAAO,CACLC,gBAAiB,uBAEnBC,KAAM,CACJD,gBAAiB,sBAEnBE,IAAK,CACHF,gBAAiB,uBAGrBM,oBAAqB,CACnBP,MAAO,CACLC,gBAAiB,QAEnBC,KAAM,CACJD,gBAAiB,kBACjBO,gBACE,yEAEJL,IAAK,CACHF,gBAAiB,kBACjBO,gBACE,0EAGNC,sBAAuB,CACrBT,MAAO,CACLC,gBAAiB,UACjB,UAAW,CAAEA,gBAAiB,YAEhCC,KAAM,CACJD,gBAAiB,UACjB,UAAW,CAAEA,gBAAiB,YAEhCE,IAAK,CACHF,gBAAiB,UACjB,UAAW,CAAEA,gBAAiB,aAGlCS,mBAAoB,CAClBV,MAAO,CACLW,MAAO,QAETT,KAAM,CACJS,MAAO,QAETR,IAAK,CACHQ,MAAO,SAGXC,gBAAiB,CACfZ,MAAO,CACLW,MAAO,WAETT,KAAM,CACJS,MAAO,WAETR,IAAK,CACHQ,MAAO,YAIXE,kBAAmB,CACjBb,MAAO,CACLW,MAAO,MACPG,WAAY,0BAEdZ,KAAM,CACJS,MAAO,MACPG,WAAY,0BAEdX,IAAK,CACHQ,MAAO,MACPG,WAAY,2BAGhBC,gBAAiB,CACff,MAAO,CACLQ,gBACE,+DAEJN,KAAM,CACJM,gBACE,yDAEJL,IAAK,CACHK,gBACE,0DAGNQ,0BAA2B,CACzBhB,MAAO,CACLQ,gBACE,mEAEJN,KAAM,CACJM,gBACE,6DAEJL,IAAK,CACHK,gBACE,8DAGNS,wBAAyB,CACvBjB,MAAO,CACLQ,gBACE,iEAEJN,KAAM,CACJM,gBACE,2DAEJL,IAAK,CACHK,gBACE,4DAGNU,6BAA8B,CAC5BlB,MAAO,CACLQ,gBACE,0EAEJN,KAAM,CACJM,gBACE,2DAEJL,IAAK,CACHK,gBACE,6DAIRW,SAAU,CACRnB,MAAO,CACLC,gBAAiB,UACjB,UAAW,CAAEA,gBAAiB,YAEhCC,KAAM,CACJD,gBAAiB,UACjB,UAAW,CAAEA,gBAAiB,YAEhCE,IAAK,CACHF,gBAAiB,UACjB,UAAW,CAAEA,gBAAiB,aAGlCmB,YAAa,CACXpB,MAAO,CACLC,gBAAiB,sBAEnBC,KAAM,CACJD,gBAAiB,WAEnBE,IAAK,CACHF,gBAAiB,YAGrBoB,cAAe,CACbrB,MAAO,CACL,UAAW,CAAEC,gBAAiB,YAEhCC,KAAM,CACJ,UAAW,CAAED,gBAAiB,YAEhCE,IAAK,CACH,UAAW,CAAEF,gBAAiB,aAGlCqB,eAAgB,CACdtB,MAAO,CACLuB,OAAQ,qBAEVrB,KAAM,CACJqB,OAAQ,qBAEVpB,IAAK,CACHoB,OAAQ,sBAGZC,UAAW,CACTxB,MAAO,CACLW,MAAO,QAETT,KAAM,CACJS,MAAO,QAETR,IAAK,CACHQ,MAAO,SAGXA,MAAO,CACLR,IAAK,UACLsB,KAAM,wBAERC,YAAa,CACX1B,MAAO,QACPE,KAAM,OACNC,IAAK,O,wMCzOT,GAAgB,mBAAqB,0CAA0C,QAAU,+BAA+B,MAAQ,6BAA6B,iBAAmB,wCAAwC,UAAY,iCAAiC,KAAO,6B,SCS/PwB,EAAgB,WAC3B,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQnF,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAAV,IAA/BA,WAERoF,EAAAA,EAAAA,YAAU,YACR,iBAAC,sGAC4B5G,EAAAA,EAAAA,QAAiB,CAC1CrC,UAAWD,EAAAA,EAAAA,UAAAA,MACXmC,WAAYnC,EAAAA,EAAAA,UAAAA,KACZoC,KAAM,IAJT,iBACSK,EADT,EACSA,WAONwG,EAAgBxG,EAAS0G,KAAKC,SARjC,0CAAD,EAWD,GAAE,IAEH,IAAMC,EAAS,CACbC,QAAS,CAACC,EAAAA,IACVC,MAAO,IACPC,SAAU,CACRC,MAAO,KACPC,sBAAsB,GAExBC,aAAc,EACdC,cAAe,EACfC,YAAY,GAGd,OACE,oBAASnG,UAAWC,EAAAA,QAApB,UACE,gBAAKD,UAAU,YAAf,UACE,gBAAKA,UAAWC,EAAAA,mBAAhB,UACE,iBAAKD,UAAWC,EAAAA,QAAhB,WAEE,SAAC,MAAD,kBAAYyF,GAAZ,aACGL,EAAanD,KACZ,YAA2D,IAAxDC,EAAuD,EAAvDA,GAAmBiE,EAAoC,EAAnDC,cAAsCC,EAAa,EAA1BhE,YAC9B,OACE,UAAC,KAAD,YACE,gBACEtC,UAAWC,EAAAA,MACXK,MAAO,CACL0D,gBAAgB,OAAD,OAAS3H,EAAAA,EAAAA,aACtB+J,GAAYE,GADC,SAKnB,gBACEhG,OAAK,QACHiG,MAAO,OACPC,OAAQ,OACRC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,cAAe,QACZrG,EAAAA,EAAAA,MAAAA,0BACDJ,OAIN,gBACEG,OAAK,QACHiG,MAAO,OACPC,OAAQ,OACRC,SAAU,WACVI,OAAQ,EACRF,KAAM,EACNC,cAAe,QACZrG,EAAAA,EAAAA,MAAAA,gBAAiCJ,QA9BxBgC,EAmCrB,QAIL,oBACA,iBAAKnC,UAAWC,EAAAA,iBAAhB,WACE,eACEK,OAAK,UACAC,EAAAA,EAAAA,UAAqBJ,IAF5B,sBAOA,eACEG,OAAK,UACAC,EAAAA,EAAAA,UAAqBJ,IAF5B,0FAcb,E,oBC/GD,EAA0B,qCAA1B,EAAkF,8CAAlF,EAAwI,mCCAxI,GAAgB,SAAW,+BAA+B,cAAgB,oCAAoC,aAAe,mCAAmC,YAAc,kCAAkC,eAAiB,qCAAqC,cAAgB,oCAAoC,aAAe,mCAAmC,MAAQ,4BAA4B,aAAe,mCAAmC,WAAa,kCCGlc2G,EAAe,SAAC,GAOtB,IANLjE,EAMI,EANJA,KACAkE,EAKI,EALJA,KACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,eACAC,EACI,EADJA,eAEQhH,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAAV,IAA/BA,UAER,OACE,iBACEG,OAAK,kBAAOC,EAAAA,EAAAA,eAA0BJ,IAAegH,GACrDnH,UAAWC,EAAAA,SAFb,iBAIG8G,QAJH,IAIGA,OAJH,EAIGA,EAAM7E,KAAI,WAAmBkF,GAAW,IAA3BrH,EAA0B,EAA1BA,MAAOsH,EAAmB,EAAnBA,MACnB,OACE,8BACE,eACErH,UACE6C,IAASwE,EACLpH,EAAI,WAAD,OAAYE,IACfF,EAAI,YAAD,OAAaE,IAJxB,SAOGJ,KAEH,kBACE8C,KAAK,QACLyE,QAASzE,IAASwE,EAClBjF,KAAK,QACLiF,MAAOA,EACPE,SAAUP,EACVhH,UAAWC,EAAAA,UAhBHmH,EAoBf,KAED,gBACE9G,OAAK,kBAAOC,EAAAA,EAAAA,YAAuBJ,IAAe8G,GAClDjH,UAAWC,EAAAA,gBAEb,gBACEK,OAAK,kBAAOC,EAAAA,EAAAA,YAAuBJ,IAAe+G,GAClDlH,UAAWC,EAAAA,eAIlB,EC3CK8G,EAAO,CACX,CAAEhH,MAAO,QAASsH,MAAOhL,EAAAA,EAAAA,UAAAA,KACzB,CAAE0D,MAAO,YAAasH,MAAOhL,EAAAA,EAAAA,UAAAA,OAGlBmL,EAAsB,WACjC,OAA4BpC,EAAAA,EAAAA,UAAS,IAArC,eAAOjE,EAAP,KAAesG,EAAf,KACA,GAAkCrC,EAAAA,EAAAA,WAAS,GAA3C,eAAOhE,EAAP,KAAkBsG,EAAlB,KACA,GAA0BtC,EAAAA,EAAAA,UAAS,IAAnC,eAAOuC,EAAP,KAAcC,EAAd,KACA,GAAwBxC,EAAAA,EAAAA,UAAS/I,EAAAA,EAAAA,UAAAA,KAAjC,eAAOwL,EAAP,KAAaC,EAAb,KACQ3H,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAAV,IAA/BA,WAMRoF,EAAAA,EAAAA,YAAU,YACR,WACEmC,GAAa,GAEb,IAAMK,EAAQC,YAAU,iBAAC,wGACSrJ,EAAAA,EAAAA,QAAiB,CAC/CrC,UAAWD,EAAAA,EAAAA,UAAAA,MACXmC,WACEqJ,IAASxL,EAAAA,EAAAA,UAAAA,IACLA,EAAAA,EAAAA,UAAAA,IACAA,EAAAA,EAAAA,UAAAA,OANe,gBACfyC,EADe,EACfA,SAAUC,EADK,EACLA,IAQdD,IACF2I,EAAU3I,EAAS0G,KAAKC,SACxBiC,GAAa,IAGX3I,IACFkJ,QAAQC,IAAInJ,GACZ6I,EAAS7I,EAAIoJ,SACbT,GAAa,IAjBQ,2CAmBtB,IAtBL,GA4BD,GAAE,CAACG,IAEJ,IAAMZ,EAAmB,CAAC,EACpBC,EAAiB,CAAC,EAGxB,OAAQW,GACN,KAAKxL,EAAAA,EAAAA,UAAAA,IACH4K,EAAiBN,KAAO,EACxBM,EAAiBV,MAAQ,OACzBW,EAAenG,UAAY,kBAC3B,MACF,KAAK1E,EAAAA,EAAAA,UAAAA,KACH4K,EAAiBN,KAAO,EACxBM,EAAiBV,MAAQ,QACzBU,EAAiBlG,UAAY,mBAC7BmG,EAAenG,UAAY,mBAC3B,MACF,QACE,OAAOkG,EAGX,OACE,oBAASjH,UAAWC,EAApB,UACE,iBAAKD,UAAU,YAAf,WACE,iBAAKA,UAAWC,EAAhB,WACE,eACED,UAAWC,EACXK,OAAK,UAAOC,EAAAA,EAAAA,UAAqBJ,IAFnC,6BAMA,SAAC2G,EAAD,CACEjE,KAAMgF,EACNd,KAAMA,EACNC,cApEsB,SAAAoB,GAC9BN,EAAQM,EAAEC,OAAOhB,MAClB,EAmESJ,iBAAkBA,EAClBC,eAAgBA,EAChBC,eAlCa,CAAEmB,SAAU,cAsC3BX,GAOA,SAAC7H,EAAA,EAAD,CAAOC,MAAM,kFANb,SAACmB,EAAA,EAAD,CACEC,OAAQA,EACRC,UAAWA,EACXjB,UAAWA,QAQtB,E,oBC5GD,GAAgB,MAAQ,2BAA2B,KAAO,0BAA0B,QAAU,6BAA6B,kBAAkB,qCAAqC,OAAS,4BAA4B,OAAS,4BAA4B,KAAO,0BAA0B,UAAY,gCCG5RoI,EAAc,WAGzB,OACE,oBAASvI,UAAWC,EAAAA,QAApB,UACE,gBAAKD,UAAU,YAAf,UACE,iBAAKA,UAAWC,EAAAA,QAAhB,WACE,eAAID,UAAWC,EAAAA,MAAf,yBACA,iBAAKD,UAAWC,EAAAA,UAAhB,WACE,iBAAKD,UAAWC,EAAAA,OAAhB,WACE,cAAGD,UAAWC,EAAAA,KAAd,ySAOA,SAACuI,EAAA,EAAD,CAAQ3H,QAhBJ,kBAAM4H,EAAAA,OAAAA,QAAe,qCAArB,EAgBsBzI,UAAWC,EAAAA,OAArC,yBAIF,gBAAKD,UAAWC,EAAAA,OAAhB,UACE,gBAAID,UAAWC,EAAAA,KAAf,WACE,eAAID,UAAWC,EAAAA,KAAf,4CACA,eAAID,UAAWC,EAAAA,KAAf,uFAIA,eAAID,UAAWC,EAAAA,KAAf,sDAGA,eAAID,UAAWC,EAAAA,KAAf,iCACA,eAAID,UAAWC,EAAAA,KAAf,kEAUf,EC7CD,EAA0B,mCAA1B,EAAgF,4CAAhF,EAAoI,iCCS9H8G,EAAO,CACX,CAAEhH,MAAO,cAAesH,MAAOhL,EAAAA,EAAAA,UAAAA,aAC/B,CAAE0D,MAAO,YAAasH,MAAOhL,EAAAA,EAAAA,UAAAA,WAC7B,CAAE0D,MAAO,WAAYsH,MAAOhL,EAAAA,EAAAA,UAAAA,WAGjBqM,EAAoB,WAC/B,OAA4BtD,EAAAA,EAAAA,UAAS,IAArC,eAAOjE,EAAP,KAAesG,EAAf,KACA,GAAkCrC,EAAAA,EAAAA,WAAS,GAA3C,eAAOhE,EAAP,KAAkBsG,EAAlB,KACA,GAA0BtC,EAAAA,EAAAA,UAAS,IAAnC,eAAOuC,EAAP,KAAcC,EAAd,KACA,GAAwBxC,EAAAA,EAAAA,UAAS/I,EAAAA,EAAAA,UAAAA,aAAjC,eAAOwG,EAAP,KAAa8F,EAAb,KACQxI,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAAV,IAA/BA,WAMRoF,EAAAA,EAAAA,YAAU,YACR,iBAAC,2FACCmC,GAAa,GAEPK,EAAQC,YAAU,iBAAC,wGACSrJ,EAAAA,EAAAA,UAAmB,CAAE9B,UAAWgG,IADzC,gBACf/D,EADe,EACfA,SAAUC,EADK,EACLA,IAEdD,IACF2I,EAAU3I,EAAS0G,KAAKC,SACxBiC,GAAa,IAGX3I,IACF6I,EAAS7I,EAAIoJ,SACbT,GAAa,IAVQ,2CAYtB,KAfJ,mBAiBQ,WACLkB,aAAab,EACd,IAnBF,0CAAD,EAqBD,GAAE,CAAClF,IAGJ,IAAIoE,EAAmB,CAAC,EACpBC,EAAiB,CAAC,EAKtB,OAAQrE,GACN,IAAK,cACHoE,EAAiBN,KAAO,EACxBM,EAAiBV,MAAQ,QACzBW,EAAenG,UAAY,kBAC3B,MACF,IAAK,YACHkG,EAAiBN,KAAO,EACxBM,EAAiBV,MAAQ,QACzBU,EAAiBlG,UAAY,oBAC7BmG,EAAenG,UAAY,mBAC3B,MACF,IAAK,WACHkG,EAAiBN,KAAO,EACxBM,EAAiBV,MAAQ,QACzBU,EAAiBlG,UAAY,oBAC7BmG,EAAenG,UAAY,mBAC3B,MACF,QACE,OAAOkG,EAIX,OACE,oBAASjH,UAAWC,EAApB,UACE,iBAAKD,UAAU,YAAf,WACE,iBAAKA,UAAWC,EAAhB,WACE,eACED,UAAWC,EACXK,OAAK,UAAOC,EAAAA,EAAAA,UAAqBJ,IAFnC,0BAMA,SAAC2G,EAAD,CACEjE,KAAMA,EACNkE,KAAMA,EACNC,cAvEsB,SAAAoB,GAC9BO,EAAQP,EAAEC,OAAOhB,MAClB,EAsESJ,iBAAkBA,EAClBC,eAAgBA,EAChBC,eA3Ca,CACrBmB,SAAU,cA8CJX,GAGA,SAAC7H,EAAA,EAAD,CAAOC,MAAM,kFAFb,SAACmB,EAAA,EAAD,CAAYC,OAAQA,EAAQC,UAAWA,QAOhD,E,UC5GD,EAA0B,2BAA1B,EAAwE,oCAAxE,EAAoH,yBCS9G2F,EAAO,CACX,CAAEhH,MAAO,UAAWsH,MAAOhL,EAAAA,EAAAA,OAAAA,SAC3B,CAAE0D,MAAO,YAAasH,MAAOhL,EAAAA,EAAAA,OAAAA,WAC7B,CAAE0D,MAAO,aAAcsH,MAAOhL,EAAAA,EAAAA,OAAAA,aAGnBwM,EAAY,WACvB,OAA4BzD,EAAAA,EAAAA,UAAS,IAArC,eAAO0D,EAAP,KAAeC,EAAf,KACA,GAAkC3D,EAAAA,EAAAA,WAAS,GAA3C,eAAOhE,EAAP,KAAkBsG,EAAlB,KACA,GAA0BtC,EAAAA,EAAAA,UAAS,IAAnC,eAAOuC,EAAP,KAAcC,EAAd,KACA,GAAwBxC,EAAAA,EAAAA,UAAS/I,EAAAA,EAAAA,OAAAA,SAAjC,eAAOwG,EAAP,KAAa8F,EAAb,KACQxI,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAAV,IAA/BA,WAERoF,EAAAA,EAAAA,YAAU,YACR,iBAAC,2FACCmC,GAAa,GAEPK,EAAQC,YAAU,iBAAC,wGACS1I,EAAAA,EAAAA,MAAY,CAC1ChD,UAAWD,EAAAA,EAAAA,UAAAA,GACXe,OAAQyF,EACRpE,KAAM,IAJe,gBACfK,EADe,EACfA,SAAUC,EADK,EACLA,IAMdD,IACFiK,EAAUjK,EAAS0G,KAAKC,SACxBiC,GAAa,IAGX3I,IACFkJ,QAAQC,IAAInJ,GACZ6I,EAAS7I,EAAIoJ,SACbT,GAAa,IAfQ,2CAiBtB,KApBJ,mBAsBQ,WACLkB,aAAab,EACd,IAxBF,0CAAD,EA0BD,GAAE,CAAClF,IAEJ,IAIMoE,EAAmB,CAAC,EACpBC,EAAiB,CAAC,EAGxB,OAAQrE,GACN,IAAK,UACHoE,EAAiBN,KAAO,EACxBM,EAAiBV,MAAQ,QACzBW,EAAenG,UAAY,kBAE3B,MACF,IAAK,YACHkG,EAAiBN,KAAO,EACxBM,EAAiBV,MAAQ,QACzBU,EAAiBlG,UAAY,oBAC7BmG,EAAenG,UAAY,mBAC3B,MACF,IAAK,aACHkG,EAAiBN,KAAO,EACxBM,EAAiBV,MAAQ,QACzBU,EAAiBlG,UAAY,oBAC7BmG,EAAenG,UAAY,mBAC3B,MACF,QACE,OAAOkG,EAGX,OACE,oBAASjH,UAAWC,EAApB,UACE,iBAAKD,UAAU,YAAf,WACE,iBAAKA,UAAWC,EAAhB,WACE,eACED,UAAWC,EACXK,OAAK,UAAOC,EAAAA,EAAAA,UAAqBJ,IAFnC,yBAMA,SAAC2G,EAAD,CACEjE,KAAMA,EACNkE,KAAMA,EACNC,cA5CsB,SAAAoB,GAC9BO,EAAQP,EAAEC,OAAOhB,MAClB,EA2CSJ,iBAAkBA,EAClBC,eAAgBA,EAChBC,eAzCa,CAAEmB,SAAU,cA6C3BX,GAKA,SAAC7H,EAAA,EAAD,CAAOC,MAAM,kFAJb,+BACE,SAACmB,EAAA,EAAD,CAAYC,OAAQ2H,EAAQ1H,UAAWA,UAQlD,EC/FD,EAZiB,WACf,OACE,iCACE,SAAC+D,EAAD,KACA,SAACqC,EAAD,KACA,SAACkB,EAAD,KACA,SAACH,EAAD,KACA,SAACM,EAAD,MAGL,C,0BCdGG,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,6FACD,QACJN,EAAQ,EAAUG,C","sources":["api/configs/tmdb.configs.js","api/modules/media.api.js","api/modules/tv.api.js","webpack://movies/./src/components/Error/Error.module.scss?bc4a","components/Error/Error.jsx","webpack://movies/./src/components/GlobalLoader/GlobalLoader.module.scss?9495","components/GlobalLoader/GlobalLoader.jsx","webpack://movies/./src/components/SliderList/SliderList.module.scss?8b3d","components/SliderList/SliderList.jsx","configs/mode.config.js","webpack://movies/./src/components/SectionSearch/SectionSearch.module.scss?9a77","components/SectionSearch/SectionSearch.jsx","webpack://movies/./src/components/SectionPopularMovie/SectionPopularMovie.module.scss?b41d","webpack://movies/./src/components/SelectorList/SelectorList.module.scss?9379","components/SelectorList/SelectorList.jsx","components/SectionPopularMovie/SectionPopularMovie.jsx","webpack://movies/./src/components/SectionJoin/SectionJoin.module.scss?566a","components/SectionJoin/SectionJoin.jsx","webpack://movies/./src/components/SectionMoreMovies/SectionMoreMovies.module.scss?257c","components/SectionMoreMovies/SectionMoreMovies.jsx","webpack://movies/./src/components/SectionTV/SectionTV.module.scss?4add","components/SectionTV/SectionTV.jsx","pages/PageHome.jsx","../node_modules/@mui/icons-material/Star.js"],"sourcesContent":["const mediaType = {\n  all: 'all',\n  movie: 'movie',\n  tv: 'tv',\n};\n\nconst movieType = {\n  now_playing: 'now_playing',\n  popular: 'popular',\n  top_rated: 'top_rated',\n  upcoming: 'upcoming',\n};\n\nconst tvType = {\n  latest: 'latest',\n  airing_today: 'airing_today',\n  on_the_air: 'on_the_air',\n  popular: 'popular',\n  top_rated: 'top_rated',\n};\n\nconst mediaTime = {\n  day: 'day',\n  week: 'week',\n};\n\nconst searchType = {\n  movie: 'movie',\n  tv: 'tv',\n  people: 'person',\n};\n\nconst sectionBgImage = imageId =>\n  `url(https://image.tmdb.org/t/p/w1920_and_h427_multi_faces/${imageId})`;\n\nconst personImage = imageId =>\n  `https://image.tmdb.org/t/p/w138_and_h175_face/${imageId}`;\n\nconst avatarImage = avatarId =>\n  `https://image.tmdb.org/t/p/w64_and_h64_face/${avatarId}`;\n\nconst posterImage = posterId => `https://image.tmdb.org/t/p/w500/${posterId}`;\n\nconst personDetailImage = personId =>\n  `https://image.tmdb.org/t/p/w300_and_h450_bestv2/${personId}`;\n\nconst backdropPath = imgEndpoint =>\n  `https://image.tmdb.org/t/p/original${imgEndpoint}`;\n\nconst youtubePath = videoId =>\n  `https://www.youtube.com/embed/${videoId}?controls=0`;\n\nconst tmdbConfigs = {\n  mediaType,\n  mediaTime,\n  movieType,\n  searchType,\n  tvType,\n  sectionBgImage,\n  personImage,\n  personDetailImage,\n  avatarImage,\n  posterImage,\n  backdropPath,\n  youtubePath,\n};\n\nexport default tmdbConfigs;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'd08efe59ac708d7aace6afed9ba7eae9';\n\nconst mediaEndpoints = {\n  listTrending: ({ mediaType, timeWindow, page }) =>\n    `${BASE_URL}trending/${mediaType}/${timeWindow}?api_key=${KEY}&page=${page}`,\n  listMovies: ({ movieType, page }) =>\n    `${BASE_URL}movie/${movieType}?api_key=${KEY}&page=${page}`,\n  listRecommendationMovies: ({ movieId, page }) =>\n    `${BASE_URL}movie/${movieId}/recommendations?api_key=${KEY}&page=${page}`,\n  detailsMovie: ({ movieId }) => `${BASE_URL}movie/${movieId}?api_key=${KEY}`,\n  trailer: ({ movieId }) => `${BASE_URL}movie/${movieId}/videos?api_key=${KEY}`,\n  genres: () => `${BASE_URL}genre/movie/list?api_key=${KEY}`,\n};\n\nconst mediaApi = {\n  getList: async ({ mediaType, timeWindow, page = 1 }) => {\n    try {\n      const response = await axios.get(\n        mediaEndpoints.listTrending({ mediaType, timeWindow, page })\n      );\n      return { response };\n    } catch (err) {\n      return { err };\n    }\n  },\n  getMovies: async ({ movieType, page = 1 }) => {\n    try {\n      const response = await axios.get(\n        mediaEndpoints.listMovies({ movieType, page })\n      );\n\n      return { response };\n    } catch (err) {\n      return { err };\n    }\n  },\n  getRecommendationMovies: async ({ movieId, page = 1 }) => {\n    try {\n      const response = await axios.get(\n        mediaEndpoints.listRecommendationMovies({ movieId, page })\n      );\n\n      return { response };\n    } catch (err) {\n      return { err };\n    }\n  },\n  getTrailer: async ({ movieId }) => {\n    try {\n      const response = await axios.get(mediaEndpoints.trailer({ movieId }));\n      return { response };\n    } catch (err) {\n      return { err };\n    }\n  },\n  getDetailsForMovie: async ({ movieId }) => {\n    try {\n      const response = await axios.get(\n        mediaEndpoints.detailsMovie({ movieId })\n      );\n      return { response };\n    } catch (err) {\n      return { err };\n    }\n  },\n  getGenres: async () => {\n    try {\n      const response = await axios.get(mediaEndpoints.genres());\n      return { response };\n    } catch (err) {\n      return { err };\n    }\n  },\n};\n\nexport default mediaApi;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'd08efe59ac708d7aace6afed9ba7eae9';\n\nconst mediaEndpoints = {\n  listTV: ({ mediaType, tvType, page }) =>\n    `${BASE_URL}${mediaType}/${tvType}?api_key=${KEY}&page=${page}`,\n  detailsTV: ({ tvId }) => `${BASE_URL}tv/${tvId}?api_key=${KEY}`,\n  creditsByTV: ({ tvId }) => `${BASE_URL}tv/${tvId}/credits?api_key=${KEY}`,\n  reviewsByTV: ({ tvId }) => `${BASE_URL}tv/${tvId}/reviews?api_key=${KEY}`,\n  trailersByTV: ({ tvId }) => `${BASE_URL}tv/${tvId}/videos?api_key=${KEY}`,\n  recommendationsByTV: ({ tvId }) =>\n    `${BASE_URL}tv/${tvId}/recommendations?api_key=${KEY}`,\n  genresByTV: () => `${BASE_URL}genre/tv/list?api_key=${KEY}`,\n};\n\nconst tvAPI = {\n  getTV: async ({ mediaType, tvType, page = 1 }) => {\n    try {\n      const response = await axios.get(\n        mediaEndpoints.listTV({ mediaType, tvType, page })\n      );\n      return { response };\n    } catch (err) {\n      return { err };\n    }\n  },\n  getDetailsForTV: async ({ tvId }) => {\n    try {\n      const response = await axios.get(mediaEndpoints.detailsTV({ tvId }));\n      return { response };\n    } catch (err) {\n      return { err };\n    }\n  },\n  getCreditsByTV: async ({ tvId }) => {\n    try {\n      const response = await axios.get(mediaEndpoints.creditsByTV({ tvId }));\n      return { response };\n    } catch (err) {\n      return { err };\n    }\n  },\n  getReviewsByTV: async ({ tvId }) => {\n    try {\n      const response = await axios.get(mediaEndpoints.reviewsByTV({ tvId }));\n      return { response };\n    } catch (err) {\n      return { err };\n    }\n  },\n  getRecommendationsByTV: async ({ tvId }) => {\n    try {\n      const response = await axios.get(\n        mediaEndpoints.recommendationsByTV({ tvId })\n      );\n      return { response };\n    } catch (err) {\n      return { err };\n    }\n  },\n  getTrailersByTV: async ({ tvId }) => {\n    try {\n      const response = await axios.get(mediaEndpoints.trailersByTV({ tvId }));\n      return { response };\n    } catch (err) {\n      return { err };\n    }\n  },\n  getGenresByTV: async () => {\n    try {\n      const response = await axios.get(mediaEndpoints.genresByTV());\n      return { response };\n    } catch (err) {\n      return { err };\n    }\n  },\n};\n\nexport default tvAPI;\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Error_error__pvQbU\"};","import css from './Error.module.scss';\n\nexport const Error = ({ title }) => {\n  return <div className={css.error}>{title}</div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"progress__light\":\"GlobalLoader_progress__light__7AwiB\",\"progress__dark\":\"GlobalLoader_progress__dark__OajaQ\",\"progress__red\":\"GlobalLoader_progress__red__KVhNf\",\"linear__light\":\"GlobalLoader_linear__light__QJNKm\",\"linear__dark\":\"GlobalLoader_linear__dark__0rk+e\",\"linear__red\":\"GlobalLoader_linear__red__35acA\"};","import { useSelector } from 'react-redux';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport modeConfig from 'configs/mode.config';\nimport css from './GlobalLoader.module.scss';\n\nexport const GlobalLoader = () => {\n  const { themeMode } = useSelector(state => state.themeMode);\n\n  return (\n    <div\n      style={{ ...modeConfig.style.horizontalGradientBgProgress[themeMode] }}\n      className={css[`progress__${themeMode}`]}\n    >\n      <LinearProgress\n        className={css[`linear__${themeMode}`]}\n        sx={{\n          '& .MuiLinearProgress-bar': {\n            bgcolor: themeMode === 'red' ? '#d50000' : '#01b4e4',\n          },\n        }}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SliderList_container__Figb0\",\"card\":\"SliderList_card__hwCRz\",\"description\":\"SliderList_description__pMM+6\",\"image\":\"SliderList_image__xEz4Y\",\"card__tumb\":\"SliderList_card__tumb__aBbqY\",\"rating\":\"SliderList_rating__sl62q\",\"card__container\":\"SliderList_card__container__tDe+u\",\"rating__text\":\"SliderList_rating__text__-084j\",\"rating__icon\":\"SliderList_rating__icon__sfeuo\",\"date\":\"SliderList_date__HTTEJ\",\"title\":\"SliderList_title__2EiFn\",\"progress\":\"SliderList_progress__tIxJD\",\"link\":\"SliderList_link__ADzZV\"};","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { GlobalLoader } from 'components/GlobalLoader/GlobalLoader';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport Media from 'react-media';\nimport StarIcon from '@mui/icons-material/Star';\nimport tmdbConfigs from 'api/configs/tmdb.configs';\nimport modeConfig from 'configs/mode.config';\nimport css from './SliderList.module.scss';\n\nfunction SampleNextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{\n        ...style,\n        display: 'block',\n        transform: 'translate(-45px, -20px) scale(1.8)',\n      }}\n      onClick={onClick}\n    />\n  );\n}\n\nfunction SamplePrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{\n        ...style,\n        display: 'block',\n        transform: 'translate(45px, -20px) scale(1.8)',\n        zIndex: 1,\n      }}\n      onClick={onClick}\n    />\n  );\n}\n\nexport const SliderList = ({ movies = [], isLoading = false }) => {\n  const { themeMode } = useSelector(state => state.themeMode);\n\n  const count = movies.length || 1;\n\n  return (\n    <div className={css.container}>\n      <Media\n        queries={{\n          responsive: '(max-width: 479px)',\n          mobile: '(max-width: 767px)',\n          tablet: '(min-width: 768px) and (max-width: 1279px)',\n          desktop: '(min-width: 1280px)',\n        }}\n      >\n        {matches => (\n          <Slider\n            swipeToSlide={true}\n            slidesToShow={\n              matches.responsive\n                ? 1\n                : matches.mobile\n                ? count > 2\n                  ? 2\n                  : count\n                : matches.tablet\n                ? count > 3\n                  ? 3\n                  : count\n                : count > 5\n                ? 5\n                : count\n            }\n            slidesToScroll={\n              matches.responsive\n                ? 1\n                : matches.mobile\n                ? 2\n                : matches.tablet\n                ? 2\n                : 2\n            }\n            nextArrow={<SampleNextArrow />}\n            prevArrow={<SamplePrevArrow />}\n          >\n            {movies.map(\n              ({\n                id,\n                title,\n                name,\n                poster_path: path,\n                release_date: date,\n                first_air_date: dateTV,\n                vote_average: rating,\n                media_type: type,\n              }) => (\n                <Link\n                  key={id}\n                  to={`/${type === 'tv' ? 'tv' : 'movie'}/${id}`}\n                  className={css.link}\n                >\n                  <div className={css.card}>\n                    <div className={css.card__container}>\n                      <img\n                        src={tmdbConfigs.posterImage(path)}\n                        alt={title || name}\n                        className={css.image}\n                      />\n                      <div className={css.description}></div>\n                      <div spacing={1} className={css.rating}>\n                        <p\n                          style={{\n                            ...modeConfig.style.textColorAccent[themeMode],\n                          }}\n                          className={css.rating__text}\n                        >\n                          {rating.toFixed(1)}\n                        </p>\n                        <StarIcon\n                          fontSize=\"medium\"\n                          style={{\n                            ...modeConfig.style.textColorAccent[themeMode],\n                          }}\n                          className={css.rating__icon}\n                        />\n                      </div>\n                      <div className={css.card__tumb}>\n                        <p\n                          style={{\n                            ...modeConfig.style.textColorAccent[themeMode],\n                          }}\n                          className={css.date}\n                        >\n                          {(date || dateTV)?.slice(0, 4)}\n                        </p>\n                        <p\n                          style={{\n                            ...modeConfig.style.textColorAccent[themeMode],\n                          }}\n                          className={css.title}\n                        >\n                          {title || name}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </Link>\n              )\n            )}\n          </Slider>\n        )}\n      </Media>\n      {isLoading && <GlobalLoader />}\n    </div>\n  );\n};\n","const modeConfig = {\n  style: {\n    backgroundColorHeader: {\n      light: {\n        backgroundColor: '#fff',\n      },\n      dark: {\n        backgroundColor: '#050505',\n      },\n      red: {\n        backgroundColor: '#050505',\n      },\n    },\n    backgroundColorMain: {\n      light: {\n        backgroundColor: 'rgba(0, 0, 0, 0.04)',\n      },\n      dark: {\n        backgroundColor: '#000',\n      },\n      red: {\n        backgroundColor: '#000',\n      },\n    },\n    backgroundColorSecondary: {\n      light: {\n        backgroundColor: '#fafafa',\n      },\n      dark: {\n        backgroundColor: '#212121',\n      },\n      red: {\n        backgroundColor: '#212121',\n      },\n    },\n    backgroundColorModal: {\n      light: {\n        backgroundColor: 'rgba(0, 0, 0, 0.35)',\n      },\n      dark: {\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      },\n      red: {\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      },\n    },\n    backgroundColorMenu: {\n      light: {\n        backgroundColor: '#fff',\n      },\n      dark: {\n        backgroundColor: 'rgb(19, 19, 19)',\n        backgroundImage:\n          'linear-gradient(rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.15))',\n      },\n      red: {\n        backgroundColor: 'rgb(19, 19, 19)',\n        backgroundImage:\n          'linear-gradient(rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.15))',\n      },\n    },\n    backgroundColorAccent: {\n      light: {\n        backgroundColor: '#01b4e4',\n        '&:hover': { backgroundColor: '#40c4ff' },\n      },\n      dark: {\n        backgroundColor: '#01b4e4',\n        '&:hover': { backgroundColor: '#40c4ff' },\n      },\n      red: {\n        backgroundColor: '#d50000',\n        '&:hover': { backgroundColor: '#e53935' },\n      },\n    },\n    textColorSecondary: {\n      light: {\n        color: '#000',\n      },\n      dark: {\n        color: '#000',\n      },\n      red: {\n        color: '#fff',\n      },\n    },\n    textColorAccent: {\n      light: {\n        color: '#01b4e4',\n      },\n      dark: {\n        color: '#01b4e4',\n      },\n      red: {\n        color: '#d50000',\n      },\n    },\n\n    textColorAndHover: {\n      light: {\n        color: 'red',\n        transition: 'color 0.2s ease-in-out',\n      },\n      dark: {\n        color: 'red',\n        transition: 'color 0.2s ease-in-out',\n      },\n      red: {\n        color: 'red',\n        transition: 'color 0.2s ease-in-out',\n      },\n    },\n    gradientBgImage: {\n      light: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(245,245,245,1), rgba(0,0,0,0))',\n      },\n      dark: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(0,0,0,1), rgba(0,0,0,0))',\n      },\n      red: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(0,0,0,1), rgba(0,0,0,0))',\n      },\n    },\n    horizontalGradientBgImage: {\n      light: {\n        backgroundImage:\n          'linear-gradient(to right, rgba(245,245,245,0.8), rgba(0,0,0,0))',\n      },\n      dark: {\n        backgroundImage:\n          'linear-gradient(to right, rgba(0,0,0,0.8), rgba(0,0,0,0))',\n      },\n      red: {\n        backgroundImage:\n          'linear-gradient(to right, rgba(0,0,0,0.8), rgba(0,0,0,0))',\n      },\n    },\n    verticalGradientBgImage: {\n      light: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(245,245,245,0.9), rgba(0,0,0,0))',\n      },\n      dark: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(0,0,0,0.9), rgba(0,0,0,0))',\n      },\n      red: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(0,0,0,0.9), rgba(0,0,0,0))',\n      },\n    },\n    horizontalGradientBgProgress: {\n      light: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(245,245,245,0.95), rgba(245,245,245,0.3))',\n      },\n      dark: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(0,0,0,0.9), rgba(0,0,0,0))',\n      },\n      red: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(0,0,0,0.9), rgba(0,0,0,0))',\n      },\n    },\n  },\n  bgAccent: {\n    light: {\n      backgroundColor: '#01b4e4',\n      '&:hover': { backgroundColor: '#40c4ff' },\n    },\n    dark: {\n      backgroundColor: '#01b4e4',\n      '&:hover': { backgroundColor: '#40c4ff' },\n    },\n    red: {\n      backgroundColor: '#d50000',\n      '&:hover': { backgroundColor: '#e53935' },\n    },\n  },\n  bgSecondary: {\n    light: {\n      backgroundColor: 'rgba(3, 37, 65, 1)',\n    },\n    dark: {\n      backgroundColor: '#01b4e4',\n    },\n    red: {\n      backgroundColor: '#d50000',\n    },\n  },\n  bgAccentHover: {\n    light: {\n      '&:hover': { backgroundColor: '#40c4ff' },\n    },\n    dark: {\n      '&:hover': { backgroundColor: '#40c4ff' },\n    },\n    red: {\n      '&:hover': { backgroundColor: '#e53935' },\n    },\n  },\n  bgBorderAccent: {\n    light: {\n      border: '1px solid #01b4e4',\n    },\n    dark: {\n      border: '1px solid #01b4e4',\n    },\n    red: {\n      border: '1px solid #d50000',\n    },\n  },\n  textColor: {\n    light: {\n      color: '#000',\n    },\n    dark: {\n      color: '#fff',\n    },\n    red: {\n      color: '#fff',\n    },\n  },\n  color: {\n    red: '#d50000',\n    blue: 'rgba(1, 180, 228, 1)',\n  },\n  themeConfig: {\n    light: 'light',\n    dark: 'dark',\n    red: 'red',\n  },\n};\n\nexport default modeConfig;\n","// extracted by mini-css-extract-plugin\nexport default {\"section__container\":\"SectionSearch_section__container__ddeDO\",\"wrapper\":\"SectionSearch_wrapper__MNXjT\",\"slide\":\"SectionSearch_slide__9Mg8h\",\"title__container\":\"SectionSearch_title__container__DqnaK\",\"container\":\"SectionSearch_container__NgCn3\",\"list\":\"SectionSearch_list__OTbeZ\"};","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport 'swiper/css';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay } from 'swiper';\nimport mediaApi from 'api/modules/media.api';\nimport tmdbConfigs from 'api/configs/tmdb.configs';\nimport modeConfig from 'configs/mode.config';\nimport css from './SectionSearch.module.scss';\n\nexport const SectionSearch = () => {\n  const [posterMovies, setPosterMovies] = useState([]);\n  const { themeMode } = useSelector(state => state.themeMode);\n\n  useEffect(() => {\n    (async () => {\n      const { response } = await mediaApi.getList({\n        mediaType: tmdbConfigs.mediaType.movie,\n        timeWindow: tmdbConfigs.mediaTime.week,\n        page: 2,\n      });\n\n      if (response) {\n        setPosterMovies(response.data.results);\n      }\n    })();\n  }, []);\n\n  const params = {\n    modules: [Autoplay],\n    speed: 2000,\n    autoplay: {\n      delay: 8500,\n      disableOnInteraction: false,\n    },\n    spaceBetween: 0,\n    slidesPerView: 1,\n    grabCursor: false,\n  };\n\n  return (\n    <section className={css.section}>\n      <div className=\"container\">\n        <div className={css.section__container}>\n          <div className={css.wrapper}>\n            {/* Slider - start */}\n            <Swiper {...params}>\n              {posterMovies.map(\n                ({ id, backdrop_path: backdrop, poster_path: poster }) => {\n                  return (\n                    <SwiperSlide key={id}>\n                      <div\n                        className={css.slide}\n                        style={{\n                          backgroundImage: `url(${tmdbConfigs.backdropPath(\n                            backdrop || poster\n                          )})`,\n                        }}\n                      ></div>\n                      <div\n                        style={{\n                          width: '100%',\n                          height: '100%',\n                          position: 'absolute',\n                          top: 0,\n                          left: 0,\n                          pointerEvents: 'none',\n                          ...modeConfig.style.horizontalGradientBgImage[\n                            themeMode\n                          ],\n                        }}\n                      ></div>\n                      <div\n                        style={{\n                          width: '100%',\n                          height: '100%',\n                          position: 'absolute',\n                          bottom: 0,\n                          left: 0,\n                          pointerEvents: 'none',\n                          ...modeConfig.style.gradientBgImage[themeMode],\n                        }}\n                      ></div>\n                    </SwiperSlide>\n                  );\n                }\n              )}\n            </Swiper>\n            {/* Slider - end */}\n            <div />\n            <div className={css.title__container}>\n              <h2\n                style={{\n                  ...modeConfig.textColor[themeMode],\n                }}\n              >\n                Welcome\n              </h2>\n              <h3\n                style={{\n                  ...modeConfig.textColor[themeMode],\n                }}\n              >\n                Millions of movies, TV shows and people to discover. Explore\n                now.\n              </h3>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"SectionPopularMovie_section__T7Te-\",\"title__container\":\"SectionPopularMovie_title__container__T9Ez8\",\"title\":\"SectionPopularMovie_title__HsirM\"};","// extracted by mini-css-extract-plugin\nexport default {\"selector\":\"SelectorList_selector__GsmRu\",\"active__light\":\"SelectorList_active__light__49c4f\",\"active__dark\":\"SelectorList_active__dark__FI3CL\",\"active__red\":\"SelectorList_active__red__28xMV\",\"disable__light\":\"SelectorList_disable__light__OnKWb\",\"disable__dark\":\"SelectorList_disable__dark__+dEH5\",\"disable__red\":\"SelectorList_disable__red__ICH1h\",\"input\":\"SelectorList_input__1a-Tw\",\"bgHorizontal\":\"SelectorList_bgHorizontal__kuQzq\",\"bgVertical\":\"SelectorList_bgVertical__fd6tQ\"};","import { useSelector } from 'react-redux';\nimport modeConfig from 'configs/mode.config';\nimport css from './SelectorList.module.scss';\n\nexport const SelectorList = ({\n  type,\n  list,\n  onChangeValue,\n  stylesHorizontal,\n  stylesVertical,\n  stylesMaxWidth,\n}) => {\n  const { themeMode } = useSelector(state => state.themeMode);\n\n  return (\n    <div\n      style={{ ...modeConfig.bgBorderAccent[themeMode], ...stylesMaxWidth }}\n      className={css.selector}\n    >\n      {list?.map(({ title, value }, index) => {\n        return (\n          <label key={index}>\n            <h3\n              className={\n                type === value\n                  ? css[`active__${themeMode}`]\n                  : css[`disable__${themeMode}`]\n              }\n            >\n              {title}\n            </h3>\n            <input\n              type=\"radio\"\n              checked={type === value}\n              name=\"radio\"\n              value={value}\n              onChange={onChangeValue}\n              className={css.input}\n            />\n          </label>\n        );\n      })}\n\n      <div\n        style={{ ...modeConfig.bgSecondary[themeMode], ...stylesHorizontal }}\n        className={css.bgHorizontal}\n      ></div>\n      <div\n        style={{ ...modeConfig.bgSecondary[themeMode], ...stylesVertical }}\n        className={css.bgVertical}\n      ></div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { SliderList } from 'components/SliderList/SliderList';\nimport { Error } from 'components/Error/Error';\nimport mediaApi from 'api/modules/media.api';\nimport tmdbConfigs from 'api/configs/tmdb.configs';\nimport modeConfig from 'configs/mode.config';\nimport css from './SectionPopularMovie.module.scss';\nimport { SelectorList } from 'components/SelectorList/SelectorList';\n\nconst list = [\n  { title: 'Today', value: tmdbConfigs.mediaTime.day },\n  { title: 'This Week', value: tmdbConfigs.mediaTime.week },\n];\n\nexport const SectionPopularMovie = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [time, setTime] = useState(tmdbConfigs.mediaTime.day);\n  const { themeMode } = useSelector(state => state.themeMode);\n\n  const handleChangeRadioButton = e => {\n    setTime(e.target.value);\n  };\n\n  useEffect(() => {\n    (() => {\n      setIsLoading(true);\n\n      const timer = setTimeout(async () => {\n        const { response, err } = await mediaApi.getList({\n          mediaType: tmdbConfigs.mediaType.movie,\n          timeWindow:\n            time === tmdbConfigs.mediaTime.day\n              ? tmdbConfigs.mediaTime.day\n              : tmdbConfigs.mediaTime.week,\n        });\n\n        if (response) {\n          setMovies(response.data.results);\n          setIsLoading(false);\n        }\n\n        if (err) {\n          console.log(err);\n          setError(err.message);\n          setIsLoading(false);\n        }\n      }, 600);\n\n      return () => {\n        clearTimeout(timer);\n      };\n    })();\n  }, [time]);\n\n  const stylesHorizontal = {};\n  const stylesVertical = {};\n  const stylesMaxWidth = { maxWidth: '210px' };\n\n  switch (time) {\n    case tmdbConfigs.mediaTime.day:\n      stylesHorizontal.left = 0;\n      stylesHorizontal.width = '90px';\n      stylesVertical.transform = 'translateY(0px)';\n      break;\n    case tmdbConfigs.mediaTime.week:\n      stylesHorizontal.left = 0;\n      stylesHorizontal.width = '125px';\n      stylesHorizontal.transform = 'translateX(85px)';\n      stylesVertical.transform = 'translateY(30px)';\n      break;\n    default:\n      return stylesHorizontal;\n  }\n\n  return (\n    <section className={css.section}>\n      <div className=\"container\">\n        <div className={css.title__container}>\n          <h2\n            className={css.title}\n            style={{ ...modeConfig.textColor[themeMode] }}\n          >\n            Popular Movies\n          </h2>\n          <SelectorList\n            type={time}\n            list={list}\n            onChangeValue={handleChangeRadioButton}\n            stylesHorizontal={stylesHorizontal}\n            stylesVertical={stylesVertical}\n            stylesMaxWidth={stylesMaxWidth}\n          />\n        </div>\n\n        {!error ? (\n          <SliderList\n            movies={movies}\n            isLoading={isLoading}\n            themeMode={themeMode}\n          />\n        ) : (\n          <Error title=\"Sorry, we're experiencing a temporary network issue. Please try again later.\" />\n        )}\n      </div>\n    </section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"SectionJoin_title__02bMk\",\"text\":\"SectionJoin_text__2PNaN\",\"wrapper\":\"SectionJoin_wrapper__Ob6Ns\",\"move-background\":\"SectionJoin_move-background__vr0G1\",\"button\":\"SectionJoin_button__p3UiO\",\"column\":\"SectionJoin_column__kTpSt\",\"list\":\"SectionJoin_list__GaDxY\",\"container\":\"SectionJoin_container__jf3HO\"};","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport Button from '@mui/material/Button';\nimport css from './SectionJoin.module.scss';\n\nexport const SectionJoin = () => {\n  const message = () => Notify.warning('This section is under development.');\n\n  return (\n    <section className={css.section}>\n      <div className=\"container\">\n        <div className={css.wrapper}>\n          <h2 className={css.title}>Join Today</h2>\n          <div className={css.container}>\n            <div className={css.column}>\n              <p className={css.text}>\n                Get access to maintain your own custom personal lists, track\n                what you've seen and search and filter for what to watch\n                next—regardless if it's in theatres, on TV or available on\n                popular streaming services like Netflix, Amazon Prime Video,\n                Disney Plus, Apple TV Plus, and fuboTV.\n              </p>\n              <Button onClick={message} className={css.button}>\n                Sign Up\n              </Button>\n            </div>\n            <div className={css.column}>\n              <ul className={css.list}>\n                <li className={css.item}>Maintain a personal watchlist</li>\n                <li className={css.item}>\n                  Filter by your subscribed streaming services and find\n                  something to watch\n                </li>\n                <li className={css.item}>\n                  Log the movies and TV shows you've seen\n                </li>\n                <li className={css.item}>Build custom lists</li>\n                <li className={css.item}>\n                  Contribute to and improve our database\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"SectionMoreMovies_section__RemR9\",\"title__container\":\"SectionMoreMovies_title__container__gG8aa\",\"title\":\"SectionMoreMovies_title__mpISa\"};","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { SliderList } from 'components/SliderList/SliderList';\nimport mediaApi from 'api/modules/media.api';\nimport tmdbConfigs from 'api/configs/tmdb.configs';\nimport modeConfig from 'configs/mode.config';\nimport css from './SectionMoreMovies.module.scss';\nimport { Error } from 'components/Error/Error';\nimport { SelectorList } from 'components/SelectorList/SelectorList';\n\nconst list = [\n  { title: 'Now Playing', value: tmdbConfigs.movieType.now_playing },\n  { title: 'Top Rated', value: tmdbConfigs.movieType.top_rated },\n  { title: 'Upcoming', value: tmdbConfigs.movieType.upcoming },\n];\n\nexport const SectionMoreMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [type, setType] = useState(tmdbConfigs.movieType.now_playing);\n  const { themeMode } = useSelector(state => state.themeMode);\n\n  const handleChangeRadioButton = e => {\n    setType(e.target.value);\n  };\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n\n      const timer = setTimeout(async () => {\n        const { response, err } = await mediaApi.getMovies({ movieType: type });\n\n        if (response) {\n          setMovies(response.data.results);\n          setIsLoading(false);\n        }\n\n        if (err) {\n          setError(err.message);\n          setIsLoading(false);\n        }\n      }, 600);\n\n      return () => {\n        clearTimeout(timer);\n      };\n    })();\n  }, [type]);\n\n  // Styles for select category - start:\n  let stylesHorizontal = {};\n  let stylesVertical = {};\n  const stylesMaxWidth = {\n    maxWidth: '375px',\n  };\n\n  switch (type) {\n    case 'now_playing':\n      stylesHorizontal.left = 0;\n      stylesHorizontal.width = '135px';\n      stylesVertical.transform = 'translateY(0px)';\n      break;\n    case 'top_rated':\n      stylesHorizontal.left = 0;\n      stylesHorizontal.width = '110px';\n      stylesHorizontal.transform = 'translateX(140px)';\n      stylesVertical.transform = 'translateY(28px)';\n      break;\n    case 'upcoming':\n      stylesHorizontal.left = 0;\n      stylesHorizontal.width = '120px';\n      stylesHorizontal.transform = 'translateX(255px)';\n      stylesVertical.transform = 'translateY(60px)';\n      break;\n    default:\n      return stylesHorizontal;\n  }\n  // Styles for select category - end.\n\n  return (\n    <section className={css.section}>\n      <div className=\"container\">\n        <div className={css.title__container}>\n          <h2\n            className={css.title}\n            style={{ ...modeConfig.textColor[themeMode] }}\n          >\n            More Movies\n          </h2>\n          <SelectorList\n            type={type}\n            list={list}\n            onChangeValue={handleChangeRadioButton}\n            stylesHorizontal={stylesHorizontal}\n            stylesVertical={stylesVertical}\n            stylesMaxWidth={stylesMaxWidth}\n          />\n        </div>\n\n        {!error ? (\n          <SliderList movies={movies} isLoading={isLoading} />\n        ) : (\n          <Error title=\"Sorry, we're experiencing a temporary network issue. Please try again later.\" />\n        )}\n      </div>\n    </section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"SectionTV_section__sIMl7\",\"title__container\":\"SectionTV_title__container__pUbBU\",\"title\":\"SectionTV_title__aOJIK\"};","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Error } from 'components/Error/Error';\nimport { SelectorList } from 'components/SelectorList/SelectorList';\nimport { SliderList } from 'components/SliderList/SliderList';\nimport tvAPI from 'api/modules/tv.api';\nimport tmdbConfigs from 'api/configs/tmdb.configs';\nimport modeConfig from 'configs/mode.config';\nimport css from './SectionTV.module.scss';\n\nconst list = [\n  { title: 'Popular', value: tmdbConfigs.tvType.popular },\n  { title: 'Top Rated', value: tmdbConfigs.tvType.top_rated },\n  { title: 'On The Air', value: tmdbConfigs.tvType.on_the_air },\n];\n\nexport const SectionTV = () => {\n  const [series, setSeries] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [type, setType] = useState(tmdbConfigs.tvType.popular);\n  const { themeMode } = useSelector(state => state.themeMode);\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n\n      const timer = setTimeout(async () => {\n        const { response, err } = await tvAPI.getTV({\n          mediaType: tmdbConfigs.mediaType.tv,\n          tvType: type,\n          page: 1,\n        });\n\n        if (response) {\n          setSeries(response.data.results);\n          setIsLoading(false);\n        }\n\n        if (err) {\n          console.log(err);\n          setError(err.message);\n          setIsLoading(false);\n        }\n      }, 600);\n\n      return () => {\n        clearTimeout(timer);\n      };\n    })();\n  }, [type]);\n\n  const handleChangeRadioButton = e => {\n    setType(e.target.value);\n  };\n\n  const stylesHorizontal = {};\n  const stylesVertical = {};\n  const stylesMaxWidth = { maxWidth: '343px' };\n\n  switch (type) {\n    case 'popular':\n      stylesHorizontal.left = 0;\n      stylesHorizontal.width = '105px';\n      stylesVertical.transform = 'translateY(0px)';\n\n      break;\n    case 'top_rated':\n      stylesHorizontal.left = 0;\n      stylesHorizontal.width = '115px';\n      stylesHorizontal.transform = 'translateX(105px)';\n      stylesVertical.transform = 'translateY(28px)';\n      break;\n    case 'on_the_air':\n      stylesHorizontal.left = 0;\n      stylesHorizontal.width = '125px';\n      stylesHorizontal.transform = 'translateX(220px)';\n      stylesVertical.transform = 'translateY(60px)';\n      break;\n    default:\n      return stylesHorizontal;\n  }\n\n  return (\n    <section className={css.section}>\n      <div className=\"container\">\n        <div className={css.title__container}>\n          <h2\n            className={css.title}\n            style={{ ...modeConfig.textColor[themeMode] }}\n          >\n            Television\n          </h2>\n          <SelectorList\n            type={type}\n            list={list}\n            onChangeValue={handleChangeRadioButton}\n            stylesHorizontal={stylesHorizontal}\n            stylesVertical={stylesVertical}\n            stylesMaxWidth={stylesMaxWidth}\n          />\n        </div>\n\n        {!error ? (\n          <>\n            <SliderList movies={series} isLoading={isLoading} />\n          </>\n        ) : (\n          <Error title=\"Sorry, we're experiencing a temporary network issue. Please try again later.\" />\n        )}\n      </div>\n    </section>\n  );\n};\n","import { SectionSearch } from 'components/SectionSearch/SectionSearch';\nimport { SectionPopularMovie } from 'components/SectionPopularMovie/SectionPopularMovie';\nimport { SectionJoin } from 'components/SectionJoin/SectionJoin';\nimport { SectionMoreMovies } from 'components/SectionMoreMovies/SectionMoreMovies';\nimport { SectionTV } from 'components/SectionTV/SectionTV';\n\nconst PageHome = () => {\n  return (\n    <>\n      <SectionSearch />\n      <SectionPopularMovie />\n      <SectionMoreMovies />\n      <SectionJoin />\n      <SectionTV />\n    </>\n  );\n};\n\nexport default PageHome;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 17.27 18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), 'Star');\nexports.default = _default;"],"names":["tmdbConfigs","mediaType","all","movie","tv","mediaTime","day","week","movieType","now_playing","popular","top_rated","upcoming","searchType","people","tvType","latest","airing_today","on_the_air","sectionBgImage","imageId","personImage","personDetailImage","personId","avatarImage","avatarId","posterImage","posterId","backdropPath","imgEndpoint","youtubePath","videoId","BASE_URL","KEY","mediaEndpoints","timeWindow","page","movieId","mediaApi","getList","axios","response","err","getMovies","getRecommendationMovies","getTrailer","getDetailsForMovie","getGenres","tvId","tvAPI","getTV","getDetailsForTV","getCreditsByTV","getReviewsByTV","getRecommendationsByTV","getTrailersByTV","getGenresByTV","Error","title","className","css","GlobalLoader","themeMode","useSelector","state","style","modeConfig","LinearProgress","sx","bgcolor","SampleNextArrow","props","onClick","display","transform","SamplePrevArrow","zIndex","SliderList","movies","isLoading","count","length","queries","responsive","mobile","tablet","desktop","matches","swipeToSlide","slidesToShow","slidesToScroll","nextArrow","prevArrow","map","id","name","path","poster_path","date","release_date","dateTV","first_air_date","rating","vote_average","type","media_type","to","src","alt","spacing","toFixed","Star","fontSize","slice","backgroundColorHeader","light","backgroundColor","dark","red","backgroundColorMain","backgroundColorSecondary","backgroundColorModal","backgroundColorMenu","backgroundImage","backgroundColorAccent","textColorSecondary","color","textColorAccent","textColorAndHover","transition","gradientBgImage","horizontalGradientBgImage","verticalGradientBgImage","horizontalGradientBgProgress","bgAccent","bgSecondary","bgAccentHover","bgBorderAccent","border","textColor","blue","themeConfig","SectionSearch","useState","posterMovies","setPosterMovies","useEffect","data","results","params","modules","Autoplay","speed","autoplay","delay","disableOnInteraction","spaceBetween","slidesPerView","grabCursor","backdrop","backdrop_path","poster","width","height","position","top","left","pointerEvents","bottom","SelectorList","list","onChangeValue","stylesHorizontal","stylesVertical","stylesMaxWidth","index","value","checked","onChange","SectionPopularMovie","setMovies","setIsLoading","error","setError","time","setTime","timer","setTimeout","console","log","message","e","target","maxWidth","SectionJoin","Button","Notify","SectionMoreMovies","setType","clearTimeout","SectionTV","series","setSeries","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}