{"version":3,"file":"static/js/323.2a10eb3b.chunk.js","mappings":"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","sources":["webpack://movies/./src/components/Logo/Logo.module.scss?07fc","components/Logo/Logo.jsx","configs/mode.config.js","webpack://movies/./src/components/Navigation/Navigation.module.scss?a7be","components/Navigation/Navigation.jsx","components/SelectThemeMode/SelectThemeMode.jsx","configs/menu.configs.js","webpack://movies/./src/components/Sidebar/Sidebar.module.scss?60bc","components/Sidebar/Sidebar.jsx","webpack://movies/./src/components/Header/Header.module.scss?6eb7","components/Header/Header.jsx","webpack://movies/./src/components/Footer/Footer.module.scss?d4c2","components/Footer/Footer.jsx","pages/Layout.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"logo\":\"Logo_logo__6yrBi\",\"logo__light\":\"Logo_logo__light__ucQzO\",\"logo__dark\":\"Logo_logo__dark__Y3Dot\",\"logo__red\":\"Logo_logo__red__iGAcU\"};","import { useSelector } from 'react-redux';\nimport modeConfig from 'configs/mode.config';\nimport css from './Logo.module.scss';\n\nexport const Logo = ({ fontSize = '' }) => {\n  const { themeMode } = useSelector(state => state.themeMode);\n\n  return (\n    <p\n      style={{\n        ...modeConfig.textColor[themeMode],\n        fontSize: `${fontSize}px`,\n      }}\n      className={css.logo}\n    >\n      Film<span className={css[`logo__${themeMode}`]}>Frenzy</span>\n    </p>\n  );\n};\n","const modeConfig = {\n  style: {\n    backgroundColorHeader: {\n      light: {\n        backgroundColor: '#fff',\n      },\n      dark: {\n        backgroundColor: '#050505',\n      },\n      red: {\n        backgroundColor: '#050505',\n      },\n    },\n    backgroundColorMain: {\n      light: {\n        backgroundColor: 'rgba(0, 0, 0, 0.04)',\n      },\n      dark: {\n        backgroundColor: '#000',\n      },\n      red: {\n        backgroundColor: '#000',\n      },\n    },\n    backgroundColorSecondary: {\n      light: {\n        backgroundColor: '#fafafa',\n      },\n      dark: {\n        backgroundColor: '#212121',\n      },\n      red: {\n        backgroundColor: '#212121',\n      },\n    },\n    backgroundColorModal: {\n      light: {\n        backgroundColor: 'rgba(0, 0, 0, 0.35)',\n      },\n      dark: {\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      },\n      red: {\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      },\n    },\n    backgroundColorMenu: {\n      light: {\n        backgroundColor: '#fff',\n      },\n      dark: {\n        backgroundColor: 'rgb(19, 19, 19)',\n        backgroundImage:\n          'linear-gradient(rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.15))',\n      },\n      red: {\n        backgroundColor: 'rgb(19, 19, 19)',\n        backgroundImage:\n          'linear-gradient(rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.15))',\n      },\n    },\n    backgroundColorAccent: {\n      light: {\n        backgroundColor: '#01b4e4',\n        '&:hover': { backgroundColor: '#40c4ff' },\n      },\n      dark: {\n        backgroundColor: '#01b4e4',\n        '&:hover': { backgroundColor: '#40c4ff' },\n      },\n      red: {\n        backgroundColor: '#d50000',\n        '&:hover': { backgroundColor: '#e53935' },\n      },\n    },\n    textColorSecondary: {\n      light: {\n        color: '#000',\n      },\n      dark: {\n        color: '#000',\n      },\n      red: {\n        color: '#fff',\n      },\n    },\n    textColorAccent: {\n      light: {\n        color: '#01b4e4',\n      },\n      dark: {\n        color: '#01b4e4',\n      },\n      red: {\n        color: '#d50000',\n      },\n    },\n\n    textColorAndHover: {\n      light: {\n        color: 'red',\n        transition: 'color 0.2s ease-in-out',\n      },\n      dark: {\n        color: 'red',\n        transition: 'color 0.2s ease-in-out',\n      },\n      red: {\n        color: 'red',\n        transition: 'color 0.2s ease-in-out',\n      },\n    },\n    gradientBgImage: {\n      light: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(245,245,245,1), rgba(0,0,0,0))',\n      },\n      dark: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(0,0,0,1), rgba(0,0,0,0))',\n      },\n      red: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(0,0,0,1), rgba(0,0,0,0))',\n      },\n    },\n    horizontalGradientBgImage: {\n      light: {\n        backgroundImage:\n          'linear-gradient(to right, rgba(245,245,245,0.8), rgba(0,0,0,0))',\n      },\n      dark: {\n        backgroundImage:\n          'linear-gradient(to right, rgba(0,0,0,0.8), rgba(0,0,0,0))',\n      },\n      red: {\n        backgroundImage:\n          'linear-gradient(to right, rgba(0,0,0,0.8), rgba(0,0,0,0))',\n      },\n    },\n    verticalGradientBgImage: {\n      light: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(245,245,245,0.9), rgba(0,0,0,0))',\n      },\n      dark: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(0,0,0,0.9), rgba(0,0,0,0))',\n      },\n      red: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(0,0,0,0.9), rgba(0,0,0,0))',\n      },\n    },\n    horizontalGradientBgProgress: {\n      light: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(245,245,245,0.95), rgba(245,245,245,0.3))',\n      },\n      dark: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(0,0,0,0.9), rgba(0,0,0,0))',\n      },\n      red: {\n        backgroundImage:\n          'linear-gradient(to top, rgba(0,0,0,0.9), rgba(0,0,0,0))',\n      },\n    },\n  },\n  bgAccent: {\n    light: {\n      backgroundColor: '#01b4e4',\n      '&:hover': { backgroundColor: '#40c4ff' },\n    },\n    dark: {\n      backgroundColor: '#01b4e4',\n      '&:hover': { backgroundColor: '#40c4ff' },\n    },\n    red: {\n      backgroundColor: '#d50000',\n      '&:hover': { backgroundColor: '#e53935' },\n    },\n  },\n  bgSecondary: {\n    light: {\n      backgroundColor: 'rgba(3, 37, 65, 1)',\n    },\n    dark: {\n      backgroundColor: '#01b4e4',\n    },\n    red: {\n      backgroundColor: '#d50000',\n    },\n  },\n  bgAccentHover: {\n    light: {\n      '&:hover': { backgroundColor: '#40c4ff' },\n    },\n    dark: {\n      '&:hover': { backgroundColor: '#40c4ff' },\n    },\n    red: {\n      '&:hover': { backgroundColor: '#e53935' },\n    },\n  },\n  bgBorderAccent: {\n    light: {\n      border: '1px solid #01b4e4',\n    },\n    dark: {\n      border: '1px solid #01b4e4',\n    },\n    red: {\n      border: '1px solid #d50000',\n    },\n  },\n  textColor: {\n    light: {\n      color: '#000',\n    },\n    dark: {\n      color: '#fff',\n    },\n    red: {\n      color: '#fff',\n    },\n  },\n  color: {\n    red: '#d50000',\n    blue: 'rgba(1, 180, 228, 1)',\n  },\n  themeConfig: {\n    light: 'light',\n    dark: 'dark',\n    red: 'red',\n  },\n};\n\nexport default modeConfig;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Navigation_list__hY2hZ\",\"link\":\"Navigation_link__Jlf0e\",\"button\":\"Navigation_button__4Odur\"};","import { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Button } from '@mui/material';\nimport styled from 'styled-components';\nimport modeConfig from 'configs/mode.config';\nimport css from './Navigation.module.scss';\n\nconst list = [\n  { category: 'HOME', link: '/' },\n  { category: 'MOVIES', link: '/movies' },\n  { category: 'TV SERIES', link: '/tv' },\n  { category: 'SEARCH', link: '/search' },\n];\n\nconst StyledLink = styled(NavLink)`\n  &.active {\n    color: #fff !important;\n    background-color: ${props => {\n      return props.thememode === modeConfig.themeConfig.red\n        ? modeConfig.color.red\n        : modeConfig.color.blue;\n    }};\n  }\n`;\n\nexport const Navigation = () => {\n  const { themeMode } = useSelector(state => state.themeMode);\n\n  return (\n    <nav>\n      <ul className={css.list}>\n        {list.map(({ category, link }, index) => {\n          return (\n            <li key={index}>\n              <StyledLink\n                to={link}\n                style={{\n                  ...modeConfig.textColor[themeMode],\n                }}\n                className={css.link}\n                thememode={themeMode}\n              >\n                <Button\n                  sx={{\n                    ...modeConfig.bgAccentHover[themeMode],\n                  }}\n                  className={css.button}\n                >\n                  {category}\n                </Button>\n              </StyledLink>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setThemeMode } from 'redux/theme/themeModeSlice';\nimport { IconButton } from '@mui/material';\nimport LightModeOutlinedIcon from '@mui/icons-material/LightModeOutlined';\nimport DarkModeOutlinedIcon from '@mui/icons-material/DarkModeOutlined';\nimport NightsStayOutlinedIcon from '@mui/icons-material/NightsStayOutlined';\n\nexport const SelectThemeMode = () => {\n  const dispatch = useDispatch();\n  const currentTheme = useSelector(state => state.themeMode.themeMode);\n  const [mode, setMode] = useState(currentTheme);\n\n  useEffect(() => {\n    dispatch(setThemeMode(mode));\n  }, [mode, dispatch]);\n\n  const getIcon = () => {\n    switch (mode) {\n      case 'light':\n        return <LightModeOutlinedIcon style={{ color: '#000' }} />;\n      case 'dark':\n        return <DarkModeOutlinedIcon style={{ color: '#fff' }} />;\n      case 'red':\n        return <NightsStayOutlinedIcon style={{ color: '#fff' }} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <IconButton\n      color=\"inherit\"\n      onClick={() =>\n        setMode(mode === 'light' ? 'dark' : mode === 'dark' ? 'red' : 'light')\n      }\n    >\n      {getIcon()}\n    </IconButton>\n  );\n};\n","import HomeOutlinedIcon from '@mui/icons-material/HomeOutlined';\nimport SlideshowOutlinedIcon from '@mui/icons-material/SlideshowOutlined';\nimport LiveTvOutlinedIcon from '@mui/icons-material/LiveTvOutlined';\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';\n\nconst main = [\n  {\n    display: 'home',\n    path: '/',\n    icon: <HomeOutlinedIcon />,\n    state: 'home',\n  },\n  {\n    display: 'movies',\n    path: '/movies',\n    icon: <SlideshowOutlinedIcon />,\n    state: 'movies',\n  },\n  {\n    display: 'tv series',\n    path: '/tv',\n    icon: <LiveTvOutlinedIcon />,\n    state: 'tv',\n  },\n  {\n    display: 'search',\n    path: '/search',\n    icon: <SearchOutlinedIcon />,\n    state: 'search',\n  },\n];\n\nconst menuConfigs = { main };\n\nexport default menuConfigs;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Sidebar_list__6sUTY\",\"link__light\":\"Sidebar_link__light__pZAg4\",\"link__dark\":\"Sidebar_link__dark__AI9Dj\",\"link__red\":\"Sidebar_link__red__FGhK3\",\"themeText\":\"Sidebar_themeText__HkzkR\"};","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setThemeMode } from 'redux/theme/themeModeSlice';\nimport { Logo } from 'components/Logo/Logo';\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Stack,\n  Toolbar,\n  Typography,\n} from '@mui/material';\nimport LightModeOutlinedIcon from '@mui/icons-material/LightModeOutlined';\nimport DarkModeOutlinedIcon from '@mui/icons-material/DarkModeOutlined';\nimport NightsStayOutlinedIcon from '@mui/icons-material/NightsStayOutlined';\nimport menuConfigs from '../../configs/menu.configs';\nimport modeConfig from 'configs/mode.config';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport css from './Sidebar.module.scss';\n\nconst StyledLink = styled(NavLink)`\n  &.active {\n    color: #fff !important;\n    background-color: ${props => {\n      return props.thememode === 'red' ? '#d50000' : 'rgba(1, 180, 228, 1)';\n    }};\n  }\n`;\n\nexport const Sidebar = ({ open, toggleSidebar }) => {\n  const dispatch = useDispatch();\n  const [mode, setMode] = useState(modeConfig.themeConfig.light);\n  const { themeMode } = useSelector(state => state.themeMode);\n\n  useEffect(() => {\n    dispatch(setThemeMode(mode));\n  }, [mode, dispatch]);\n\n  const drawer = (\n    <div>\n      <Toolbar sx={{ paddingY: '20px', color: 'text.primary' }}>\n        <Stack width=\"100%\" direction=\"row\" justifyContent=\"center\">\n          <Logo />\n        </Stack>\n      </Toolbar>\n      <List\n        sx={{ paddingX: '30px' }}\n        style={{ ...modeConfig.style.backgroundColorMenu[themeMode] }}\n      >\n        <Typography\n          variant=\"h6\"\n          marginBottom=\"20px\"\n          style={{ ...modeConfig.textColor[themeMode] }}\n        >\n          MENU\n        </Typography>\n        <ul className={css.list}>\n          {menuConfigs.main.map((item, index) => (\n            <StyledLink\n              key={index}\n              to={item.path}\n              style={{ ...modeConfig.textColor[themeMode] }}\n              className={css[`link__${themeMode}`]}\n              thememode={themeMode}\n              onClick={() => toggleSidebar(false)}\n            >\n              <ListItemIcon\n                style={{\n                  color: 'inherit',\n                  padding: 0,\n                  margin: 0,\n                }}\n              >\n                {item.icon}\n              </ListItemIcon>\n              {item.display}\n            </StyledLink>\n          ))}\n        </ul>\n\n        <Typography\n          variant=\"h6\"\n          marginBottom=\"20px\"\n          style={{\n            ...modeConfig.textColor[themeMode],\n            marginTop: '12px',\n          }}\n        >\n          THEME\n        </Typography>\n        <ListItemButton\n          onClick={() =>\n            setMode(\n              mode === 'light' ? 'dark' : mode === 'dark' ? 'red' : 'light'\n            )\n          }\n        >\n          <ListItemIcon>\n            {themeMode === 'light' && (\n              <LightModeOutlinedIcon style={{ color: '#000' }} />\n            )}\n            {themeMode === 'dark' && (\n              <DarkModeOutlinedIcon style={{ color: '#fff' }} />\n            )}\n            {themeMode === 'red' && (\n              <NightsStayOutlinedIcon style={{ color: '#fff' }} />\n            )}\n          </ListItemIcon>\n          <ListItemText\n            disableTypography\n            primary={\n              <Typography\n                textTransform=\"uppercase\"\n                style={{ ...modeConfig.textColor[themeMode] }}\n                className={css.themeText}\n              >\n                {`${\n                  themeMode === 'light'\n                    ? 'dark'\n                    : themeMode === 'dark'\n                    ? 'red'\n                    : 'light'\n                } mode`}\n              </Typography>\n            }\n          />\n        </ListItemButton>\n      </List>\n    </div>\n  );\n\n  return (\n    <>\n      <Drawer\n        open={open}\n        onClose={() => toggleSidebar(false)}\n        sx={{\n          '& .MuiDrawer-Paper': {\n            boxSizing: 'border-box',\n            borderRight: '0px',\n          },\n        }}\n      >\n        <div\n          style={{\n            ...modeConfig.style.backgroundColorMenu[themeMode],\n            height: '100vh',\n          }}\n        >\n          {drawer}\n        </div>\n      </Drawer>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__OKWO7\",\"container\":\"Header_container__TsUVY\",\"container__block\":\"Header_container__block__72QgQ\",\"button\":\"Header_button__hjMB6\"};","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigation } from '../Navigation/Navigation';\nimport { SelectThemeMode } from '../SelectThemeMode/SelectThemeMode';\nimport { Logo } from 'components/Logo/Logo';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { IconButton } from '@mui/material';\nimport { Button } from '@mui/material';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Media from 'react-media';\nimport modeConfig from 'configs/mode.config';\nimport css from './Header.module.scss';\n\nexport const Header = () => {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const { themeMode } = useSelector(state => state.themeMode);\n\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen);\n\n  const message = () => Notify.warning('This section is under development.');\n\n  return (\n    <header\n      style={{ ...modeConfig.style.backgroundColorHeader[themeMode] }}\n      className={css.header}\n    >\n      <div className=\"container\">\n        <div className={css.container}>\n          <Media query={{ maxWidth: 767 }}>\n            {matches =>\n              matches ? (\n                <div className={css.container__block}>\n                  <IconButton\n                    onClick={toggleSidebar}\n                    style={{ ...modeConfig.textColor[themeMode] }}\n                  >\n                    <MenuIcon fontSize=\"large\" />\n                  </IconButton>\n                  <Logo />\n                </div>\n              ) : (\n                <div className={css.container__block}>\n                  <Logo />\n                  <Navigation />\n                  <SelectThemeMode />\n                </div>\n              )\n            }\n          </Media>\n\n          <Button\n            onClick={message}\n            sx={{\n              ...modeConfig.bgAccent[themeMode],\n            }}\n            className={css.button}\n          >\n            SIGN IN\n          </Button>\n        </div>\n      </div>\n      <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} />\n    </header>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Footer_wrapper__RAsdB\"};","import { useSelector } from 'react-redux';\nimport { Navigation } from 'components/Navigation/Navigation';\nimport { Logo } from 'components/Logo/Logo';\nimport Media from 'react-media';\nimport modeConfig from 'configs/mode.config';\nimport css from './Footer.module.scss';\n\nexport const Footer = () => {\n  const { themeMode } = useSelector(state => state.themeMode);\n\n  return (\n    <footer\n      className={css.footer}\n      style={{\n        ...modeConfig.style.backgroundColorHeader[themeMode],\n        marginTop: 'auto',\n      }}\n    >\n      <div className=\"container\">\n        <div className={css.wrapper}>\n          <Logo />\n          <Media query=\"(min-width: 767px)\" render={() => <Navigation />} />\n        </div>\n      </div>\n    </footer>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { Header } from 'components/Header/Header';\nimport { Footer } from 'components/Footer/Footer';\nimport modeConfig from 'configs/mode.config';\n\nconst Layout = () => {\n  const { themeMode } = useSelector(state => state.themeMode);\n  return (\n    <div\n      style={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}\n    >\n      <Header />\n      <main\n        style={{\n          ...modeConfig.style.backgroundColorMain[themeMode],\n          flex: 1,\n        }}\n      >\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n"],"names":["Logo","fontSize","themeMode","useSelector","state","style","modeConfig","className","css","backgroundColorHeader","light","backgroundColor","dark","red","backgroundColorMain","backgroundColorSecondary","backgroundColorModal","backgroundColorMenu","backgroundImage","backgroundColorAccent","textColorSecondary","color","textColorAccent","textColorAndHover","transition","gradientBgImage","horizontalGradientBgImage","verticalGradientBgImage","horizontalGradientBgProgress","bgAccent","bgSecondary","bgAccentHover","bgBorderAccent","border","textColor","blue","themeConfig","list","category","link","StyledLink","styled","NavLink","props","thememode","Navigation","map","index","to","Button","sx","SelectThemeMode","dispatch","useDispatch","currentTheme","useState","mode","setMode","useEffect","setThemeMode","IconButton","onClick","LightModeOutlined","DarkModeOutlined","NightsStayOutlined","getIcon","main","display","path","icon","HomeOutlined","SlideshowOutlined","LiveTvOutlined","SearchOutlined","Sidebar","open","toggleSidebar","drawer","Toolbar","paddingY","Stack","width","direction","justifyContent","List","paddingX","Typography","variant","marginBottom","menuConfigs","item","ListItemIcon","padding","margin","marginTop","ListItemButton","ListItemText","disableTypography","primary","textTransform","Drawer","onClose","boxSizing","borderRight","height","Header","sidebarOpen","setSidebarOpen","query","maxWidth","matches","Menu","Notify","Footer","render","flexDirection","minHeight","flex","Suspense"],"sourceRoot":""}